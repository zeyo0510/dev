this["effluxTemplates"] = this["effluxTemplates"] || {};

this["effluxTemplates"]["advancedPatternEditor"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"advancedPatternEditor\">\n    <div class=\"header\">\n        <button class=\"close-button\">x</button>\n    </div>\n    <h4>Advanced pattern editor</h4>\n    <fieldset>\n        <div class=\"wrapper input\">\n            <label for=\"startPattern\">Copy pattern range:</label>\n            <input type=\"number\" id=\"apeFirstPattern\" min=\"1\" max=\"1\" value=\"1\">\n            <input type=\"number\" id=\"apeLastPattern\" min=\"1\" max=\"1\" value=\"1\">\n        </div>\n    </fieldset>\n    <fieldset>\n        <div class=\"wrapper input\">\n            <label for=\"startPattern\">Copy channel range:</label>\n            <input type=\"number\" id=\"apeFirstChannel\" min=\"1\" max=\"8\" value=\"1\">\n            <input type=\"number\" id=\"apeLastChannel\" min=\"1\" max=\"8\" value=\"8\">\n        </div>\n    </fieldset>\n    <fieldset>\n        <div class=\"wrapper input\">\n            <label for=\"advPastePattern\">Insert after pattern:</label>\n            <input type=\"number\" id=\"apePastePattern\" min=\"1\" max=\"1\" value=\"1\">\n        </div>\n    </fieldset>\n    <button class=\"confirm-button\">Copy content</button>\n</div>\n";
},"useData":true});

this["effluxTemplates"]["dialogWindow"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<div id=\"dialogWindow\">\n    <h4>"
    + alias4(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"title","hash":{},"data":data}) : helper)))
    + "</h4>\n    <p class=\"message\"></p>\n    <button class=\"confirm-button\">"
    + alias4(((helper = (helper = helpers.confirm || (depth0 != null ? depth0.confirm : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"confirm","hash":{},"data":data}) : helper)))
    + "</button>\n    <button class=\"cancel-button\">"
    + alias4(((helper = (helper = helpers.cancel || (depth0 != null ? depth0.cancel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"cancel","hash":{},"data":data}) : helper)))
    + "</button>\n</div>\n";
},"useData":true});

this["effluxTemplates"]["helpTopicGeneral"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h4>Efflux help</h4>\n<p>\n    Welcome to Efflux. A compositional tool that allows you to create music inside your web browser.\n    Efflux provides you with up to eight synthesizer modules, allowing you to create your own custom\n    sounds, driven by a tracker interface.\n</p>\n<p>\n    Contextual help is offered for all different aspects of the tracker. If you wish to read a more\n    in-depth manual for a quick start, consult the <a href=\"https://www.igorski.nl/efflux/help\" rel=\"noopener\" target=\"_blank\">online manual</a>.\n</p>\n<p>\n    Efflux is under continuous development, open for suggestions and also fully\n    <a href=\"https://www.github.com/igorski/efflux-tracker\" rel=\"noopener\" target=\"_blank\">open source</a>.\n</p>";
},"useData":true});

this["effluxTemplates"]["helpTopicMenu"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h4>Song save</h4>\n<p>\n    You can save your work so you can revisit it at a later date. Songs are saved in your browsers local storage, so\n    are only available to the browser it was saved in.\n</p>\n<h4>Import / export</h4>\n<p>\n    You can also export your song to a file which can then be imported in another browser. You can for instance start\n    a song on your Android phone, export the song and import it on your desktop computer to continue your work on\n    a larger screen.\n</p>\n<h4>Output recording</h4>\n<p>\n    It is possible to record the output of efflux live as a WAV file. By selecting this option, the recording of\n    the audio output is enabled (recording will start immediately if the sequencer was playing, or will start as soon\n    as the sequencer is started). Once the sequencer is stopped, the recording will be saved and downloaded onto\n    your device.\n</p>\n";
},"useData":true});

this["effluxTemplates"]["helpTopicMeta"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h4>Song properties</h4>\n<p>\n    Here you can give your badass composition a title and you can list your name as its author.\n</p>";
},"useData":true});

this["effluxTemplates"]["helpTopicPattern"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h4>Pattern properties</h4>\n<p>\n    Your composition can contain up to 255 patterns. To speed up proceedings, you can\n    copy a pattern (this copies both channels), and paste them into another pattern (pasting does\n    not clear existing pattern content, only overwrite overlapping notes).\n</p>\n<p>\n    When adding a pattern, it is inserted after the currently active pattern. As such it is possible\n    to add patterns in between existing parts of your composition.\n</p>\n<p>\n    Patterns can have a 16- to 128-step precision. You can switch between these on an individual pattern\n    basis. 16 steps are great for sketching rhythmic accents while 64 steps are good for creating arpeggios to\n    imply chord outlines.\n</p>\n";
},"useData":true});

this["effluxTemplates"]["helpTopicTracker"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h4>Tracker help</h4>\n<p>\n    For speedy editing, it is recommended to use the keyboard while creating your patterns. You can use the arrow\n    keys to switch pattern and channel positions and while you can use <strong>ENTER</strong> to open the parameter automation editor,\n    and <strong>ctrl + ENTER</strong> to open the note entry editor, it is recommended you invest in getting to know the shortcuts\n    for speedy editing!\n</p>\n<p>\n    For one, you can play notes instantly by using the following keyboard keys:<br /><br />\n    <strong>&nbsp;S D   G H J   L ;<br />\n    Z X C V B N M , . /</strong><br /><br />\n    ...which mimic the layout of a 1.5 octave piano keyboard. You can adjust the root octave by using the <strong>[</strong> and <strong>]</strong> keys.\n    By either clicking the record button in the transport controls or by using <strong>ctrl + R</strong> to toggle the recording mode, you can add the notes directly into the currently selected pattern.\n</p>\n<p>\n    The <strong>K</strong>-key inserts an \"off\"-instruction (kills previously playing note) while hitting <strong>SPACEBAR</strong> toggles the play state of the sequencer.\n</p>\n<p>\n    By using the left and right arrow keys you can move between note entry, instrument selection, module automation and module\n    automation values. You can use the numeric and character keys to change the values (see <a href=\"https://www.igorski.nl/efflux/help/patterns\" rel=\"noopener\" target=\"_blank\">online manual</a>).\n</p>\n<h4>Selections and copy / paste</h4>\n<p>\n    If you hold down <strong>shift</strong> while using the arrow keys (or mouse), you can make a selection. To copy a selection,\n    press <strong>ctrl + C</strong>, press <strong>ctrl + V</strong> to paste and <strong>ctrl + X</strong> to cut selections. You can paste\n    selections across the available channels.\n</p>\n<h4>Undo / redo</h4>\n<p>\n    efflux stores 99 states in its internal history. You can use <strong>ctrl + Z</strong> to undo and\n    <strong>ctrl + shift + Z</strong> to redo a state.\n</p>\n<p>\n    For more in-depth help you can consult the <a href=\"https://www.igorski.nl/efflux/help/patterns\" target=\"_blank\">pattern page</a>\n    in the online manual.\n</p>\n";
},"useData":true});

this["effluxTemplates"]["helpView"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"content\">\n\n</div>\n";
},"useData":true});

this["effluxTemplates"]["index"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<header id=\"header\">\n    <nav id=\"menu\">\n        <div class=\"toggle\">\n            <span>&#9776;</span>\n        </div>\n        <h1>efflux</h1>\n        <section id=\"menuSection\"></section>\n    </nav>\n</header>\n\n<div class=\"container\">\n    <div id=\"properties\">\n        <section id=\"transportSection\"></section>\n        <section id=\"metaSection\"></section>\n        <section id=\"patternSection\">\n            <h2>Pattern editor</h2>\n            <ul id=\"patternMenu\">\n                <li>\n                    <button id=\"patternClear\">clear</button>\n                </li>\n                <li>\n                    <button id=\"patternCopy\">copy</button>\n                </li>\n                <li>\n                    <button id=\"patternPaste\">paste</button>\n                </li>\n                <li>\n                    <button id=\"patternAdd\">add</button>\n                </li>\n                <li>\n                    <button id=\"patternDelete\">delete</button>\n                </li>\n                <li>\n                    <select id=\"patternSteps\">\n                        <option value=\"16\">16 steps</option>\n                        <option value=\"32\">32 steps</option>\n                        <option value=\"64\">64 steps</option>\n                        <option value=\"128\">128 steps</option>\n                    </select>\n                </li>\n                <li>\n                    <button id=\"patternAdvanced\">advanced</button>\n                </li>\n            </ul>\n        </section>\n    </div>\n</div>\n\n<div class=\"container\">\n    <div id=\"editor\">\n        <section id=\"patternEditor\">\n            <ul class=\"controls\">\n                <li class=\"addNote\"></li>\n                <li class=\"addOff\"></li>\n                <li class=\"removeNote\"></li>\n                <li class=\"moduleParams\"></li>\n                <li class=\"moduleGlide\"></li>\n            </ul>\n        </section>\n        <section id=\"patternTrackList\">\n            <section id=\"patternContainer\">\n                <div class=\"wrapper\">\n                    <!-- HandleBars content appended here -->\n                </div>\n                <div class=\"highlight\"></div>\n            </section>\n        </section>\n        <section id=\"helpSection\"><!-- x --></section>\n    </div>\n</div>\n\n<div id=\"footer\">\n    <span>\n        &copy; <a href=\"https://www.igorski.nl\" rel=\"noopener\" target=\"_blank\">igorski.nl</a> 2016 - 2017\n    </span>\n</div>\n\n<div id=\"blind\"><!-- obscuring area used below overlays --></div>\n";
},"useData":true});

this["effluxTemplates"]["instrumentEditor"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"header\">\n    <h2>Instrument editor</h2>\n    <button class=\"help-button\">?</button>\n    <button class=\"close-button\">x</button>\n    <select id=\"instrumentSelect\">\n        <option value=\"0\">Instrument 0</option>\n        <option value=\"1\">Instrument 1</option>\n        <option value=\"2\">Instrument 2</option>\n        <option value=\"3\">Instrument 3</option>\n        <option value=\"4\">Instrument 4</option>\n        <option value=\"5\">Instrument 5</option>\n        <option value=\"6\">Instrument 6</option>\n        <option value=\"7\">Instrument 7</option>\n    </select>\n</div>\n\n<ul id=\"oscillatorTabs\" class=\"tabList\">\n    <li data-oscillator=\"1\">\n        Oscillator 1\n    </li>\n    <li data-oscillator=\"2\">\n        Oscillator 2\n    </li>\n    <li data-oscillator=\"3\">\n        Oscillator 3\n    </li>\n</ul>\n\n<div class=\"horizontalGroup\">\n    <section id=\"instrumentOscillatorEditor\">\n        <div id=\"canvasContainer\"><!-- x --></div>\n        <div class=\"oscillatorWaveforms\">\n            <select id=\"oscillatorEnabled\">\n                <option value=\"true\">Enabled</option>\n                <option value=\"false\">Disabled</option>\n            </select>\n            <select id=\"oscillatorWaveformSelect\">\n                <option value=\"SAW\">Sawtooth</option>\n                <option value=\"TRIANGLE\">Triangle</option>\n                <option value=\"SQUARE\">Square</option>\n                <option value=\"CUSTOM\">Custom</option>\n                <option value=\"NOISE\">Noise</option>\n            </select>\n        </div>\n\n        <div class=\"horizontalGroup\">\n            <div id=\"oscillatorEditor\" class=\"instrument-parameters\">\n                <h2>Oscillator tuning</h2>\n                <div class=\"wrapper input range\">\n                    <label for=\"detune\">Detune</label>\n                    <input type=\"range\" id=\"detune\" min=\"-50\" max=\"50\" step=\".1\" value=\"0\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"octaveShift\">Octave shift</label>\n                    <input type=\"range\" id=\"octaveShift\" min=\"-2\" max=\"2\" step=\"1\" value=\"0\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"fineShift\">Fine shift</label>\n                    <input type=\"range\" id=\"fineShift\" min=\"-7\" max=\"7\" step=\"1\" value=\"0\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"volume\">Volume</label>\n                    <input type=\"range\" id=\"volume\" min=\"0\" max=\"1\" step=\".01\" value=\"0\">\n                </div>\n            </div>\n\n            <div id=\"envelopeEditor\" class=\"instrument-parameters\">\n                <ul id=\"envelopeTabs\" class=\"tabList\">\n                    <li data-type=\"amplitude\" class=\"active\">\n                        Amplitude\n                    </li>\n                    <li data-type=\"pitch\">\n                        Pitch\n                    </li>\n                </ul>\n\n                <div id=\"amplitudeEditor\" class=\"tabbed-content active\">\n                    <h2>Amplitude envelope</h2>\n                    <div class=\"wrapper input range\">\n                        <label for=\"attack\">Attack</label>\n                        <input type=\"range\" id=\"attack\" min=\"0\" max=\"1\" step=\".01\" value=\"0\">\n                    </div>\n                    <div class=\"wrapper input range\">\n                        <label for=\"decay\">Decay</label>\n                        <input type=\"range\" id=\"decay\" min=\"0\" max=\"1\" step=\".01\" value=\"0\">\n                    </div>\n                    <div class=\"wrapper input range\">\n                        <label for=\"sustain\">Sustain</label>\n                        <input type=\"range\" id=\"sustain\" min=\"0\" max=\"1\" step=\".01\" value=\".75\">\n                    </div>\n                    <div class=\"wrapper input range\">\n                        <label for=\"release\">Release</label>\n                        <input type=\"range\" id=\"release\" min=\"0\" max=\"1\" step=\".01\" value=\"0\">\n                    </div>\n                </div>\n\n                <div id=\"pitchEditor\" class=\"tabbed-content\">\n                    <h2>Pitch envelope</h2>\n                    <div class=\"wrapper input range\">\n                        <label for=\"pitchRange\">Range</label>\n                        <input type=\"range\" id=\"pitchRange\" min=\"-24\" max=\"24\" step=\"1\" value=\"0\" />\n                    </div>\n                    <div class=\"wrapper input range\">\n                        <label for=\"pitchAttack\">Attack</label>\n                        <input type=\"range\" id=\"pitchAttack\" min=\"0\" max=\"1\" step=\".01\" value=\"0\">\n                    </div>\n                    <div class=\"wrapper input range\">\n                        <label for=\"pitchDecay\">Decay</label>\n                        <input type=\"range\" id=\"pitchDecay\" min=\"0\" max=\"1\" step=\".01\" value=\"1\">\n                    </div>\n                    <div class=\"wrapper input range\">\n                        <label for=\"pitchSustain\">Sustain</label>\n                        <input type=\"range\" id=\"pitchSustain\" min=\"0\" max=\"1\" step=\".01\" value=\".75\">\n                    </div>\n                    <div class=\"wrapper input range\">\n                        <label for=\"pitchRelease\">Release</label>\n                        <input type=\"range\" id=\"pitchRelease\" min=\"0\" max=\"1\" step=\".01\" value=\"0\">\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section id=\"instrumentModulesEditor\">\n\n        <ul id=\"modulesTabs\" class=\"tabList\">\n            <li data-type=\"page1\" class=\"active\">\n                1 : Mixer / FX\n            </li>\n            <li data-type=\"page2\">\n                2 : FX modules\n            </li>\n        </ul>\n\n        <div id=\"modulesPage1\" class=\"tabbed-content active\">\n            <div class=\"instrument-parameters\">\n                <div class=\"wrapper input range\">\n                    <label for=\"instrumentVolume\">Volume</label>\n                    <input type=\"range\" id=\"instrumentVolume\" min=\"0\" max=\"1\" step=\".01\" value=\"0\">\n                </div>\n            </div>\n\n            <div id=\"eqEditor\" class=\"instrument-parameters\">\n                <h2>Equalizer</h2>\n                <select id=\"eqEnabled\">\n                    <option value=\"true\">Enabled</option>\n                    <option value=\"false\">Disabled</option>\n                </select>\n                <div class=\"wrapper input range\">\n                    <label for=\"eqLow\">Low</label>\n                    <input type=\"range\" id=\"eqLow\" min=\"0\" max=\"1\" step=\".01\" value=\"1\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"eqMid\">Mid</label>\n                    <input type=\"range\" id=\"eqMid\" min=\"0\" max=\"1\" step=\".01\" value=\"1\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"eqHigh\">High</label>\n                    <input type=\"range\" id=\"eqHigh\" min=\"0\" max=\"1\" step=\".01\" value=\"1\">\n                </div>\n            </div>\n\n            <div id=\"filterEditor\" class=\"instrument-parameters\">\n                <h2>Filter</h2>\n                <select id=\"filterEnabled\">\n                    <option value=\"true\">Enabled</option>\n                    <option value=\"false\">Disabled</option>\n                </select>\n                <div class=\"wrapper input range\">\n                    <label for=\"filterFrequency\">Frequency</label>\n                    <input type=\"range\" id=\"filterFrequency\" min=\"40\" max=\"24000\" step=\".01\" value=\"880\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"filterQ\">Q</label>\n                    <input type=\"range\" id=\"filterQ\" min=\"0\" max=\"40\" step=\"1\" value=\"5\">\n                </div>\n                <select id=\"filterLFO\">\n                    <option value=\"off\">LFO off</option>\n                    <option value=\"sine\">Sine</option>\n                    <option value=\"square\">Square</option>\n                    <option value=\"sawtooth\">Sawtooth</option>\n                    <option value=\"triangle\">Triangle</option>\n                </select>\n                <select id=\"filterType\">\n                    <option value=\"lowpass\">Lowpass</option>\n                    <option value=\"highpass\">Highpass</option>\n                    <option value=\"bandpass\">Bandpass</option>\n                    <option value=\"lowshelf\">Lowshelf</option>\n                    <option value=\"highshelf\">Highshelf</option>\n                    <option value=\"peaking\">Peaking</option>\n                    <option value=\"notch\">Notch</option>\n                    <option value=\"allpass\">Allpass</option>\n                </select>\n                <div class=\"wrapper input range\">\n                    <label for=\"filterSpeed\">LFO Speed</label>\n                    <input type=\"range\" id=\"filterSpeed\" min=\"0.1\" max=\"25\" step=\".01\" value=\"0.5\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"filterDepth\">LFO Depth</label>\n                    <input type=\"range\" id=\"filterDepth\" min=\"0\" max=\"100\" step=\".01\" value=\"50\">\n                </div>\n            </div>\n        </div>\n\n        <div id=\"modulesPage2\" class=\"tabbed-content\">\n\n            <div id=\"odEditor\" class=\"instrument-parameters\">\n                <h2>Overdrive</h2>\n                <select id=\"odEnabled\">\n                    <option value=\"true\">Enabled</option>\n                    <option value=\"false\">Disabled</option>\n                </select>\n                <div class=\"wrapper input range\">\n                    <label for=\"odDrive\">Drive</label>\n                    <input type=\"range\" id=\"odDrive\" min=\"0\" max=\"1\" step=\".01\" value=\"0.5\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"odPreBand\">BP (pre)</label>\n                    <input type=\"range\" id=\"odPreBand\" min=\"0\" max=\"1\" step=\".01\" value=\"0.5\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"odColor\">BP (post)</label>\n                    <input type=\"range\" id=\"odColor\" min=\"0\" max=\"22050\" step=\"1\" value=\"800\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"odPostCut\">LP (post)</label>\n                    <input type=\"range\" id=\"odPostCut\" min=\"0\" max=\"22050\" step=\".01\" value=\"3000\">\n                </div>\n            </div>\n\n            <div id=\"delayEditor\" class=\"instrument-parameters\">\n                <h2>Delay</h2>\n                <select id=\"delayEnabled\">\n                    <option value=\"true\">Enabled</option>\n                    <option value=\"false\">Disabled</option>\n                </select>\n                <select id=\"delayType\">\n                    <option value=\"0\">Delay 0</option>\n                    <option value=\"1\">Delay 1</option>\n                    <option value=\"2\">Delay 2</option>\n                </select>\n                <div class=\"wrapper input range\">\n                    <label for=\"delayTime\">Delay time</label>\n                    <input type=\"range\" id=\"delayTime\" min=\"0\" max=\"2\" step=\".001\" value=\".5\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"delayFeedback\">Feedback</label>\n                    <input type=\"range\" id=\"delayFeedback\" min=\"0\" max=\"1\" step=\".01\" value=\"0.5\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"delayCutoff\">Cutoff</label>\n                    <input type=\"range\" id=\"delayCutoff\" min=\"0\" max=\"22050\" step=\"1\" value=\"880\">\n                </div>\n                <div class=\"wrapper input range\">\n                    <label for=\"delayOffset\">Offset</label>\n                    <input type=\"range\" id=\"delayOffset\" min=\"0\" max=\"1\" step=\".01\" value=\"0\">\n                </div>\n            </div>\n        </div>\n\n    </section>\n</div>\n\n<section id=\"instrumentPresets\">\n    <h2>Presets</h2>\n    <select id=\"presetSelect\"></select>\n    <div class=\"save\">\n        <input type=\"text\" id=\"presetName\" placeholder=\"preset name\" />\n        <button id=\"presetSave\">Save preset</button>\n    </div>\n</section>\n";
},"useData":true});

this["effluxTemplates"]["loader"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class='uil-default-css'>\n    <div style='top:80px;left:93px;width:14px;height:40px;background:#FFE23D;-webkit-transform:rotate(0deg) translate(0,-60px);transform:rotate(0deg) translate(0,-60px);border-radius:10px;position:absolute;'></div>\n    <div style='top:80px;left:93px;width:14px;height:40px;background:#FFE23D;-webkit-transform:rotate(30deg) translate(0,-60px);transform:rotate(30deg) translate(0,-60px);border-radius:10px;position:absolute;'></div>\n    <div style='top:80px;left:93px;width:14px;height:40px;background:#FFE23D;-webkit-transform:rotate(60deg) translate(0,-60px);transform:rotate(60deg) translate(0,-60px);border-radius:10px;position:absolute;'></div>\n    <div style='top:80px;left:93px;width:14px;height:40px;background:#FFE23D;-webkit-transform:rotate(90deg) translate(0,-60px);transform:rotate(90deg) translate(0,-60px);border-radius:10px;position:absolute;'></div>\n    <div style='top:80px;left:93px;width:14px;height:40px;background:#FFE23D;-webkit-transform:rotate(120deg) translate(0,-60px);transform:rotate(120deg) translate(0,-60px);border-radius:10px;position:absolute;'></div>\n    <div style='top:80px;left:93px;width:14px;height:40px;background:#FFE23D;-webkit-transform:rotate(150deg) translate(0,-60px);transform:rotate(150deg) translate(0,-60px);border-radius:10px;position:absolute;'></div>\n    <div style='top:80px;left:93px;width:14px;height:40px;background:#FFE23D;-webkit-transform:rotate(180deg) translate(0,-60px);transform:rotate(180deg) translate(0,-60px);border-radius:10px;position:absolute;'></div>\n    <div style='top:80px;left:93px;width:14px;height:40px;background:#FFE23D;-webkit-transform:rotate(210deg) translate(0,-60px);transform:rotate(210deg) translate(0,-60px);border-radius:10px;position:absolute;'></div>\n    <div style='top:80px;left:93px;width:14px;height:40px;background:#FFE23D;-webkit-transform:rotate(240deg) translate(0,-60px);transform:rotate(240deg) translate(0,-60px);border-radius:10px;position:absolute;'></div>\n    <div style='top:80px;left:93px;width:14px;height:40px;background:#FFE23D;-webkit-transform:rotate(270deg) translate(0,-60px);transform:rotate(270deg) translate(0,-60px);border-radius:10px;position:absolute;'></div>\n    <div style='top:80px;left:93px;width:14px;height:40px;background:#FFE23D;-webkit-transform:rotate(300deg) translate(0,-60px);transform:rotate(300deg) translate(0,-60px);border-radius:10px;position:absolute;'></div>\n    <div style='top:80px;left:93px;width:14px;height:40px;background:#FFE23D;-webkit-transform:rotate(330deg) translate(0,-60px);transform:rotate(330deg) translate(0,-60px);border-radius:10px;position:absolute;'></div>\n</div>\n";
},"useData":true});

this["effluxTemplates"]["menuView"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "            <li id=\"songImport\">Import song</li>\n            <li id=\"songExport\">Export song</li>\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "            <li id=\"instrumentImport\">Import instrument presets</li>\n            <li id=\"instrumentExport\">Export instrument presets</li>\n";
},"5":function(container,depth0,helpers,partials,data) {
    return "        <li id=\"audioRecord\">Record output</li>\n";
},"7":function(container,depth0,helpers,partials,data) {
    return "    <li id=\"fullscreenBtn\">Maximize</li>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "<ul id=\"menuList\">\n    <li>\n        <span class=\"title\">File</span>\n        <ul id=\"fileMenu\">\n            <li id=\"songLoad\">Load song</li>\n            <li id=\"songSave\">Save song</li>\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.addExport : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "            <li id=\"songReset\">Reset song</li>\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.addExport : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "        </ul>\n    </li>\n    <li id=\"settingsBtn\">Settings</li>\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.addSave : depth0),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    <li id=\"helpBtn\">Help</li>\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.addFullscreen : depth0),{"name":"if","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</ul>\n";
},"useData":true});

this["effluxTemplates"]["metaView"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"metaEditor\">\n    <h2>Song properties</h2>\n    <input type=\"text\" id=\"songTitle\" placeholder=\"song title\" />\n    <input type=\"text\" id=\"songAuthor\" placeholder=\"song author\" />\n    <button id=\"instrumentEditBtn\">Instrument editor</button>\n</div>\n";
},"useData":true});

this["effluxTemplates"]["moduleParamEntry"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"moduleParamEntry\">\n    <div class=\"header\">\n        <button class=\"help-button\">?</button>\n        <button class=\"close-button\">x</button>\n    </div>\n    <h4>Module Parameter Change editor</h4>\n    <ul id=\"moduleSelect\">\n        <ul class=\"event\">\n            <li data-value=\"volume\">volume</li>\n            <li data-value=\"pitchUp\">pitch +8ve</li>\n            <li data-value=\"pitchDown\">pitch -8ve</li>\n        </ul>\n        <ul class=\"filter\">\n            <li data-value=\"filterEnabled\">filter on/off</li>\n            <li data-value=\"filterFreq\">filter frequency</li>\n            <li data-value=\"filterQ\">filter q</li>\n            <li data-value=\"filterLFOEnabled\">filter LFO on/off</li>\n            <li data-value=\"filterLFOSpeed\">filter LFO speed</li>\n            <li data-value=\"filterLFODepth\">filter LFO depth</li>\n        </ul>\n        <ul class=\"delay\">\n            <li data-value=\"delayEnabled\">delay on/off</li>\n            <li data-value=\"delayTime\">delay time</li>\n            <li data-value=\"delayFeedback\">delay feedback</li>\n            <li data-value=\"delayCutoff\">delay cutoff</li>\n            <li data-value=\"delayOffset\">delay offset</li>\n        </ul>\n    </ul>\n    <fieldset>\n        <div class=\"wrapper input radio\">\n            <h2>Glide ?</h2>\n            <label for=\"glideTrue\">On</label>\n            <input type=\"radio\" id=\"glideTrue\" name=\"glide\" value=\"true\">\n            <label for=\"glideFalse\">Off</label>\n            <input type=\"radio\" id=\"glideFalse\" name=\"glide\" value=\"false\">\n        </div>\n        <div class=\"wrapper input range\">\n            <label for=\"moduleValue\">Parameter value</label>\n            <input type=\"range\" id=\"moduleValue\" min=\"0\" max=\"100\" step=\"1\">\n            <div id=\"moduleInputValue\"></div>\n        </div>\n        <p>\n            For fast editing: use the keyboard to type a module parameter (first letter),\n            use the \"G\" key to toggle glide on/off and type a numerical value between 0 to 99\n            for its parameter value. Hit enter to confirm.\n        </p>\n        <button class=\"confirm-button\">OK</button>\n    </fieldset>\n</div>\n";
},"useData":true});

this["effluxTemplates"]["notSupported"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<header id=\"header\">\n    <nav id=\"menu\">\n        <div class=\"toggle\">\n            <span>&#9776;</span>\n        </div>\n        <h1>efflux</h1>\n        <section id=\"songSection\"></section>\n    </nav>\n</header>\n\n<div id=\"main\">\n    <h1>Whoops...</h1>\n    <p>\n        Either the WebAudio API is not supported in this browser or it does not match the\n        required standards. Sadly, efflux depends on this API in order to actually output sound!\n    </p>\n    <p>\n        Luckily, you can get a web browser that offers support for free.\n        We recommend <a href=\"https://www.google.com/chrome\" rel=\"noopener\" target=\"_blank\">Google Chrome</a> for an\n        optimal experience.\n    </p>\n</div>\n\n<div id=\"footer\">\n    <span>\n        &copy; <a href=\"https://www.igorski.nl\" rel=\"noopener\" target=\"_blank\">igorski.nl</a> 2016 - 2017\n    </span>\n</div>\n";
},"useData":true});

this["effluxTemplates"]["noteEntry"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"noteEntry\">\n    <div class=\"header\">\n        <button class=\"help-button\">?</button>\n        <button class=\"close-button\">x</button>\n    </div>\n    <h4>Note entry editor</h4>\n    <ul id=\"keyboardNotes\">\n        <li data-value=\"C\"  class=\"C\"></li>\n        <li data-value=\"C#\" class=\"CS sharp\"></li>\n        <li data-value=\"D\"  class=\"D\"></li>\n        <li data-value=\"D#\" class=\"DS sharp\"></li>\n        <li data-value=\"E\"  class=\"E\"></li>\n        <li data-value=\"F\"  class=\"F\"></li>\n        <li data-value=\"F#\" class=\"FS sharp\"></li>\n        <li data-value=\"G\"  class=\"G\"></li>\n        <li data-value=\"G#\" class=\"GS sharp\"></li>\n        <li data-value=\"A\"  class=\"A\"></li>\n        <li data-value=\"A#\" class=\"AS sharp\"></li>\n        <li data-value=\"B\"  class=\"B\"></li>\n    </ul>\n    <ul id=\"octaves\">\n        <li data-value=\"1\">1</li>\n        <li data-value=\"2\">2</li>\n        <li data-value=\"3\">3</li>\n        <li data-value=\"4\">4</li>\n        <li data-value=\"5\">5</li>\n        <li data-value=\"6\">6</li>\n        <li data-value=\"7\">7</li>\n        <li data-value=\"8\">8</li>\n    </ul>\n    <select id=\"instrument\">\n        <option value=\"0\">Instrument 0</option>\n        <option value=\"1\">Instrument 1</option>\n        <option value=\"2\">Instrument 2</option>\n        <option value=\"3\">Instrument 3</option>\n        <option value=\"4\">Instrument 4</option>\n        <option value=\"5\">Instrument 5</option>\n        <option value=\"6\">Instrument 6</option>\n        <option value=\"7\">Instrument 7</option>\n    </select>\n    <p>\n        For fast editing: use the keyboard to type a note name and\n        octave number for easy pitch selection. Hit enter to confirm.\n    </p>\n    <button class=\"confirm-button\">OK</button>\n</div>\n";
},"useData":true});

this["effluxTemplates"]["notificationView"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<h3>"
    + alias4(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"title","hash":{},"data":data}) : helper)))
    + "</h3>\n<p>\n    "
    + alias4(((helper = (helper = helpers.content || (depth0 != null ? depth0.content : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"content","hash":{},"data":data}) : helper)))
    + "\n</p>\n";
},"useData":true});

this["effluxTemplates"]["patternTrackList"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "        <li>"
    + container.escapeExpression(container.lambda(depth0, depth0))
    + "</li>\n";
},"3":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return "<ul class=\"pattern\">\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),depth0,{"name":"each","hash":{},"fn":container.program(4, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</ul>\n";
},"4":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return ((stack1 = helpers["if"].call(alias1,(helpers.and || (depth0 && depth0.and) || alias2).call(alias1,(helpers.eq || (depth0 && depth0.eq) || alias2).call(alias1,(data && data.index),(depths[2] != null ? depths[2].activeStep : depths[2]),{"name":"eq","hash":{},"data":data}),(helpers.eq || (depth0 && depth0.eq) || alias2).call(alias1,(container.data(data, 1) && container.data(data, 1).index),(depths[2] != null ? depths[2].activeChannel : depths[2]),{"name":"eq","hash":{},"data":data}),{"name":"and","hash":{},"data":data}),{"name":"if","hash":{},"fn":container.program(5, data, 0, blockParams, depths),"inverse":container.program(7, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.action : depth0),{"name":"if","hash":{},"fn":container.program(9, data, 0, blockParams, depths),"inverse":container.program(14, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.mp : depth0),{"name":"if","hash":{},"fn":container.program(16, data, 0, blockParams, depths),"inverse":container.program(18, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "        </span>\n    </li>\n";
},"5":function(container,depth0,helpers,partials,data) {
    return "        <li class=\"active\">\n";
},"7":function(container,depth0,helpers,partials,data) {
    return "        <li>\n";
},"9":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.note : depth0),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.program(12, data, 0),"data":data})) != null ? stack1 : "");
},"10":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "            <span class=\"note\">\n                "
    + alias2(alias1((depth0 != null ? depth0.note : depth0), depth0))
    + " - "
    + alias2(alias1((depth0 != null ? depth0.octave : depth0), depth0))
    + "\n            </span>\n            <span class=\"instrument\">\n                "
    + alias2(alias1((depth0 != null ? depth0.instrument : depth0), depth0))
    + "\n            </span>\n";
},"12":function(container,depth0,helpers,partials,data) {
    return "                <span class=\"note\">//// OFF ////</span>\n                <span class=\"instrument\"></span>\n";
},"14":function(container,depth0,helpers,partials,data) {
    return "            <span class=\"note empty\">----</span>\n            <span class=\"instrument\">-</span>\n";
},"16":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "            <span class=\"moduleParam\">\n                "
    + alias3((helpers.mparam || (depth0 && depth0.mparam) || alias2).call(alias1,(depth0 != null ? depth0.mp : depth0),{"name":"mparam","hash":{},"data":data}))
    + "\n            </span>\n            <span class=\"moduleValue\">\n                "
    + alias3((helpers.mvalue || (depth0 && depth0.mvalue) || alias2).call(alias1,(depth0 != null ? depth0.mp : depth0),(depths[2] != null ? depths[2].format : depths[2]),{"name":"mvalue","hash":{},"data":data}))
    + "\n            </span>\n";
},"18":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers.unless.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.action : depth0),{"name":"unless","hash":{},"fn":container.program(19, data, 0),"inverse":container.program(21, data, 0),"data":data})) != null ? stack1 : "");
},"19":function(container,depth0,helpers,partials,data) {
    return "                <span class=\"moduleParam empty\">---</span>\n                <span class=\"moduleValue empty\">---</span>\n";
},"21":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.note : depth0),{"name":"if","hash":{},"fn":container.program(22, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"22":function(container,depth0,helpers,partials,data) {
    return "                    <span class=\"moduleParam empty\">--</span>\n                    <span class=\"moduleValue empty\">--</span>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "<ul class=\"indices\">\n"
    + ((stack1 = (helpers.loop || (depth0 && depth0.loop) || helpers.helperMissing).call(alias1,(depth0 != null ? depth0.steps : depth0),{"name":"loop","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</ul>\n"
    + ((stack1 = helpers.each.call(alias1,((stack1 = (depth0 != null ? depth0.pattern : depth0)) != null ? stack1.channels : stack1),{"name":"each","hash":{},"fn":container.program(3, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"useData":true,"useDepths":true});

this["effluxTemplates"]["settingsView"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"header\">\n    <h2>Settings</h2>\n    <button class=\"close-button\">x</button>\n</div>\n<section id=\"generalSetup\">\n    <fieldset>\n        <legend>General settings</legend>\n        <div class=\"wrapper select\">\n            <label for=\"parameterInputFormat\">Parameter input format</label>\n            <select id=\"parameterInputFormat\">\n                <option value=\"hex\">Hexadecimal (00 to FF)</option>\n                <option value=\"pct\">Percentage (0 to 100)</option>\n            </select>\n        </div>\n    </fieldset>\n</section>\n<section id=\"midiSetup\">\n    <fieldset>\n        <legend>MIDI setup</legend>\n        <button id=\"midiConnect\">Connect to MIDI API</button>\n        <div class=\"wrapper select\">\n            <label for=\"midiDevices\">Select a MIDI input device:</label>\n            <select id=\"midiDevices\">\n                <option>Connect to MIDI API first.</option>\n            </select>\n        </div>\n        <p>\n            Note: you can record incoming MIDI notes straight into the patterns by clicking\n            the record button in the transport controls. You can also record live during playback, but\n            keep in mind that the notes will be quantized to the step resolution of the current pattern.\n        </p>\n    </fieldset>\n\n</section>\n";
},"useData":true});

this["effluxTemplates"]["songBrowser"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"songBrowser\">\n    <div class=\"header\">\n        <h2>Songs</h2>\n        <button class=\"close-button\">x</button>\n    </div>\n    <ul class=\"songList\">\n\n    </ul>\n</div>\n";
},"useData":true});

this["effluxTemplates"]["transport"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"transportControls\">\n    <ul>\n        <li id=\"playBTN\" class=\"icon-play\"></li>\n        <li id=\"loopBTN\" class=\"icon-loop\"></li>\n        <li id=\"recordBTN\" class=\"disabled\"></li>\n        <li class=\"icon-metronome\"></li>\n        <li class=\"icon-settings\"></li>\n        <li id=\"patternBack\">\n            &lt;&lt;\n        </li>\n        <li id=\"currentPattern\">\n            <input class=\"current\" value=\"1\" maxlength=\"3\">\n            <span class=\"divider\">/</span>\n            <span class=\"total\">1</span>\n        </li>\n        <li id=\"patternNext\">\n            &gt;&gt;\n        </li>\n    </ul>\n    <div id=\"tempoControl\" class=\"wrapper input range\">\n        <label for=\"songTempo\">Tempo</label>\n        <input type=\"range\" name=\"tempo\" id=\"songTempo\" min=\"40\" max=\"300\" step=\"0.1\" value=\"120\">\n        <span class=\"value\" id=\"songTempoDisplay\">120.0 BPM</span>\n    </div>\n</div>\n";
},"useData":true});