T.Picking=function(){this.projector=new T.Projector;this.pickingVertexShaderFaceObject=function(a){return"attribute float faceIndex;\nvarying vec4 vColor;\nvoid main(void) {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n float objectIndex ="+a.toString()+".0;\nfloat d = 1.0 / 255.0;\nfloat f1 = floor(faceIndex / 65536.0);\nfloat f2 = floor((faceIndex - 65536.0 * f1) / 256.0);\nfloat f3 = faceIndex - 65536.0 * f1 - 256.0 * f2;\nvColor = vec4(f1 * d, f2 * d, f3 * d, objectIndex / 255.0);\n}"};
this.pickingVertexShaderObject=function(a){return"varying vec4 vColor;\nvoid main(void) {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n float objectIndex ="+a.toString()+".0;\nfloat d = 1.0 / 255.0;\nfloat f1 = floor(objectIndex / 65536.0);\nfloat f2 = floor((objectIndex - 65536.0 * f1) / 256.0);\nfloat f3 = objectIndex - 65536.0 * f1 - 256.0 * f2;\nvColor = vec4(f1 * d, f2 * d, f3 * d, 0.1);\n}"};this.pickingFragmentShader=function(){return"uniform float geometryIndex;\nvarying vec4 vColor;\nvoid main(void) {\nif (geometryIndex == -1.0) discard;\ngl_FragColor = vColor;\n}"};
this.isPickingObject=function(a,b,d){return void 0!=a.material&&(1==d||1==a.visible)&&(1==b||1!=a.dummy)};this.isPickingBadEdge=function(a,b,d){return a instanceof T.Line&&a.material==T.SceneUtils.badEdgesMaterial&&(1==d||1==a.visible)&&1==a.dummy};this._createPickingList=function(a,b,d,c,e){a=a instanceof Array?{children:a}:a;var f=[];if(!1===d)1==b(a,c,e)&&f.push(a);else for(i=0;i<a.children.length;i++)a.children[i].traverse(function(a){1==b(a,c,e)&&f.push(a)});return f};this.faceToCameraCos=function(a,
b,d,c){c=new T.V3(0,0,1);this.projector.unprojectVector(c,d);d=c.sub(d.position).normalize();c=new T.V3(a.centroid.x,a.centroid.y,a.centroid.z);var e=new T.V3(a.centroid.x,a.centroid.y,a.centroid.z);e.add(a.normal);c.applyMatrix4(b.matrixWorld);e.applyMatrix4(b.matrixWorld);a=e.sub(c).normalize();return dot=d.dot(a)};this._getScreenCoordinates=function(a,b,d,c){var e=new T.Vector4,f=new T.Vector4;e.copy(a);e.applyMatrix4(b.matrixWorld);f.copy(e);f.applyMatrix4(c);return new T.Vector2((1+f.x/f.w)*
d.domElement.offsetWidth/2,(1-f.y/f.w)*d.domElement.offsetHeight/2)};this.getScreenCoordinates=function(a,b,d,c){var e=new T.Matrix4;e.multiply(c.projectionMatrix,c.matrixWorldInverse);return this._getScreenCoordinates(a,b,d,e)};this._growMarkedFace=function(a,b,d,c,e,f,m,h){var g=T.GeometryUtils.updateEdgeFaces(b.geometry),l=this.faceToCameraCos(b.geometry.faces[a],b,c,e);.3>Math.abs(l)&&(l=-1);var k=[],t=this;faceTraverse=function(a){a=b.geometry.faces[a];if(a.color.getHex()==h.getHex())return!1;
var g;if(a instanceof T.F3)g=[b.geometry.vertices[a.a],b.geometry.vertices[a.b],b.geometry.vertices[a.c]];else if(a instanceof T.Face4)g=[b.geometry.vertices[a.a],b.geometry.vertices[a.b],b.geometry.vertices[a.c],b.geometry.vertices[a.d]];else return!1;var n,p,q,r;k=t._getScreenCoordinates(g[0],b,d,e);minx=k.x;p=k.y;q=k.x;r=k.y;for(n=1;n<g.length;n++)k=t._getScreenCoordinates(g[n],b,d,e),k.x<minx&&(minx=k.x),k.y<p&&(p=k.y),k.x>q&&(q=k.x),k.y>r&&(r=k.y);if(f+1<minx||f-1>q||m+1<p||m-1>r||0>t.faceToCameraCos(a,
b,c,e)*l)return!1;a.color=h;return!0};T.GeometryUtils.traverseAdjacentFaces(a,b.geometry,g,faceTraverse)};this.markFacesWithRectangle=function(a,b,d,c,e,f,m,h,g,l,k,t){l=this._createPickingList(a,this.isPickingObject,l,k,t);var v=Math.min(c,f),w=Math.min(e,m),n=Math.max(c,f),p=Math.max(e,m),q,r,u;e=b.domElement.offsetWidth;f=b.domElement.offsetHeight;var x=new T.Matrix4;a.updateMatrixWorld();d.updateMatrixWorld();d.matrixWorldInverse.getInverse(d.matrixWorld);x.multiplyMatrices(d.projectionMatrix,
d.matrixWorldInverse);var y=this;this._gpuPick(l,b,d,e,f,function(a,b,e,k){var f=b.getContext(),l=new Uint8Array(4*(n-v+1)*(p-w+1));f.readPixels(v,a.height-p,n-v+1,p-w+1,f.RGBA,f.UNSIGNED_BYTE,l);for(r=1;r<p-w;r++)for(q=1;q<n-v;q++)u=4*(q+r*(n-v+1)),0<l[u+3]&&255>l[u+3]&&(a=l[u+0]<<16|l[u+1]<<8|l[u+2],f=e[k+(l[u+3]-1)],void 0!=f&&(resultObject=f[0],y._growMarkedFace(a,resultObject,b,d,x,q+v,p-r,n==c?h:g),resultObject.geometry.colorsNeedUpdate=!0));return!1})};this.pickFace=function(a,b,d,c,e,f,m,
h){a=this._createPickingList(a,this.isPickingObject,f,m,h);var g={};this._gpuPick(a,b,d,b.domElement.width,b.domElement.height,function(a,b,d,f){var h=b.getContext();b=new Uint8Array(4);h.readPixels(c,a.height-e,1,1,h.RGBA,h.UNSIGNED_BYTE,b);return 0<b[3]&&255>b[3]&&(a=b[0]<<16|b[1]<<8|b[2],d=d[f+(b[3]-1)],void 0!=d)?(g.objectId=d[0].id,g.object=d[0],g.faceId=a,g.face=d[0].geometry.faces[a],!0):!1});return g};this.pickObject=function(a,b,d,c,e,f,m){var h=b.domElement.width,g=b.domElement.height;f=
this._cloneObject(a,f,m);if("undefined"==typeof pickingTexture||pickingTexture.width!=h||pickingTexture.height!=g)pickingTexture=new T.WebGLRenderTarget(h,g);pickingTexture.generateMipmaps=!1;b.render(f,d,pickingTexture,!0);d=pickingTexture;b=b.getContext();h=new Uint8Array(4);b.readPixels(c,d.height-e,1,1,b.RGBA,b.UNSIGNED_BYTE,h);20<h[3]&&30>h[3]?(c=(h[0]<<16|h[1]<<8|h[2])-1,a={object:this.getObjectById(c,a),objectId:c}):a=void 0;return a};this.getObjectById=function(a,b){var d=null;b.traverse(function(b){b.id===
a&&(d=b)});return d};this._cloneObject=function(a,b,d){if(!b&&a.dummy)return null;var c=null;a instanceof T.Scene?c=new T.Scene:(d||a.visible)&&a instanceof T.Mesh?(c={vertexColors:T.FaceColors,side:T.DoubleSide,blending:T.NoBlending,vertexShader:this.pickingVertexShaderObject(a.id+1),fragmentShader:this.pickingFragmentShader()},a.material.attributes&&(c.attributes=a.material.attributes),c=new T.Mesh(a.geometry,new T.ShaderMaterial(c))):c=new T.Object3D;T.Object3D.prototype.clone.call(a,c,!1);for(var e=
0;e<a.children.length;e++)c.add(this._cloneObject(a.children[e],b,d));return c};this._gpuPick=function(a,b,d,c,e,f,m){var h=new T.MeshPhongMaterial({vertexColors:T.FaceColors,side:T.DoubleSide,blending:T.NoBlending,color:0,opacity:1,attributes:{faceIndex:{type:"f",boundTo:"faces",value:[]}}}),g=[],l=new T.Scene;if("undefined"==typeof pickingTexture||pickingTexture.width!=c||pickingTexture.height!=e)pickingTexture=new T.WebGLRenderTarget(c,e);for(key in a)c=a[key],mesh=new T.Mesh(c.geometry,h),T.Object3D.prototype.clone.call(c,
mesh),l.add(mesh),g.push([c,mesh]);a=m?1E5:200;for(e=0;e<Math.ceil(g.length)/a;e++){pickingTexture.generateMipmaps=!1;for(index=0;index<Math.min(g.length-e*a,a);index++){c=g[e*a+index][0];var k=g[e*a+index][1],t={vertexColors:T.FaceColors,side:T.DoubleSide,blending:T.NoBlending,vertexShader:m?this.pickingVertexShaderObject(index+1):this.pickingVertexShaderFaceObject(index+1),fragmentShader:this.pickingFragmentShader()};c.material.attributes&&(t.attributes=c.material.attributes);k.material=new T.ShaderMaterial(t)}b.render(l,
d,pickingTexture,!0);if(1==f(pickingTexture,b,g,e*a))break;if(g.length-e*a>a)for(index=0;index<Math.min(g.length-e*a,a);index++)k=g[e*a+index][1],k.material=h}}};
