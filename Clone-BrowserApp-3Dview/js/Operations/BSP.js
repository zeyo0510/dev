window.TBSP=function(){var c;c=function(a){var b,l,e,d,g,h,k,n=[];if(a instanceof T.Geometry)this.matrix=new T.Matrix4;else if(a instanceof T.Mesh)a.updateMatrix(),this.matrix=a.matrix.clone(),a=a.geometry;else{if(a instanceof c.Node)return this.tree=a,this.matrix=new T.Matrix4,this;throw"TBSP: Given geometry is unsupported";}b=0;for(l=a.faces.length;b<l;b++){e=a.faces[b];g=a.faceVertexUvs[0][b];k=new c.Polygon;if(e instanceof T.F3)d=a.vertices[e.a],h=g?new T.Vector2(g[0].x,g[0].y):null,d=new c.Vertex(d.x,
d.y,d.z,e.vertexNormals[0],h),d.applyMatrix4(this.matrix),k.vertices.push(d),d=a.vertices[e.b],h=g?new T.Vector2(g[1].x,g[1].y):null,d=new c.Vertex(d.x,d.y,d.z,e.vertexNormals[2],h),d.applyMatrix4(this.matrix),k.vertices.push(d),d=a.vertices[e.c],h=g?new T.Vector2(g[2].x,g[2].y):null,d=new c.Vertex(d.x,d.y,d.z,e.vertexNormals[2],h),d.applyMatrix4(this.matrix),k.vertices.push(d);else if(typeof T.Face4)d=a.vertices[e.a],h=g?new T.Vector2(g[0].x,g[0].y):null,d=new c.Vertex(d.x,d.y,d.z,e.vertexNormals[0],
h),d.applyMatrix4(this.matrix),k.vertices.push(d),d=a.vertices[e.b],h=g?new T.Vector2(g[1].x,g[1].y):null,d=new c.Vertex(d.x,d.y,d.z,e.vertexNormals[1],h),d.applyMatrix4(this.matrix),k.vertices.push(d),d=a.vertices[e.c],h=g?new T.Vector2(g[2].x,g[2].y):null,d=new c.Vertex(d.x,d.y,d.z,e.vertexNormals[2],h),d.applyMatrix4(this.matrix),k.vertices.push(d),d=a.vertices[e.d],h=g?new T.Vector2(g[3].x,g[3].y):null,d=new c.Vertex(d.x,d.y,d.z,e.vertexNormals[3],h),d.applyMatrix4(this.matrix),k.vertices.push(d);
else throw"Invalid face type at index "+b;k.calculateProperties();n.push(k)}this.tree=new c.Node(n)};c.prototype.subtract=function(a){var b=this.tree.clone();a=a.tree.clone();b.invert();b.clipTo(a);a.clipTo(b);a.invert();a.clipTo(b);a.invert();b.build(a.allPolygons());b.invert();b=new c(b);b.matrix=this.matrix;return b};c.prototype.union=function(a){var b=this.tree.clone();a=a.tree.clone();b.clipTo(a);a.clipTo(b);a.invert();a.clipTo(b);a.invert();b.build(a.allPolygons());b=new c(b);b.matrix=this.matrix;
return b};c.prototype.intersect=function(a){var b=this.tree.clone();a=a.tree.clone();b.invert();a.clipTo(b);a.invert();b.clipTo(a);a.clipTo(b);b.build(a.allPolygons());b.invert();b=new c(b);b.matrix=this.matrix;return b};c.prototype.toGeometry=function(){var a,b,c=(new T.Matrix4).getInverse(this.matrix),e=new T.Geometry,d=this.tree.allPolygons(),g=d.length,h,k,n={},m,p,f,q;for(a=0;a<g;a++)for(h=d[a],k=h.vertices.length,b=2;b<k;b++)q=[],f=h.vertices[0],q.push(new T.Vector2(f.uv.x,f.uv.y)),f=new T.V3(f.x,
f.y,f.z),f.applyMatrix4(c),"undefined"!==typeof n[f.x+","+f.y+","+f.z]?m=n[f.x+","+f.y+","+f.z]:(e.vertices.push(f),m=n[f.x+","+f.y+","+f.z]=e.vertices.length-1),f=h.vertices[b-1],q.push(new T.Vector2(f.uv.x,f.uv.y)),f=new T.V3(f.x,f.y,f.z),f.applyMatrix4(c),"undefined"!==typeof n[f.x+","+f.y+","+f.z]?p=n[f.x+","+f.y+","+f.z]:(e.vertices.push(f),p=n[f.x+","+f.y+","+f.z]=e.vertices.length-1),f=h.vertices[b],q.push(new T.Vector2(f.uv.x,f.uv.y)),f=new T.V3(f.x,f.y,f.z),f.applyMatrix4(c),"undefined"!==
typeof n[f.x+","+f.y+","+f.z]?f=n[f.x+","+f.y+","+f.z]:(e.vertices.push(f),f=n[f.x+","+f.y+","+f.z]=e.vertices.length-1),m=new T.F3(m,p,f,new T.V3(h.normal.x,h.normal.y,h.normal.z)),e.faces.push(m),e.faceVertexUvs[0].push(q);return e};c.prototype.toMesh=function(a){var b=this.toGeometry();a=new T.Mesh(b,a);a.position.setFromMatrixPosition(this.matrix);a.rotation.setFromRotationMatrix(this.matrix);return a};c.Polygon=function(a,b,c){a instanceof Array||(a=[]);this.vertices=a;0<a.length?this.calculateProperties():
this.normal=this.w=void 0};c.Polygon.prototype.calculateProperties=function(){var a=this.vertices[0],b=this.vertices[2];this.normal=this.vertices[1].clone().subtract(a).cross(b.clone().subtract(a)).normalize();this.w=this.normal.clone().dot(a);return this};c.Polygon.prototype.clone=function(){var a,b,l=new c.Polygon;a=0;for(b=this.vertices.length;a<b;a++)l.vertices.push(this.vertices[a].clone());l.calculateProperties();return l};c.Polygon.prototype.flip=function(){var a,b=[];this.normal.multiplyScalar(-1);
this.w*=-1;for(a=this.vertices.length-1;0<=a;a--)b.push(this.vertices[a]);this.vertices=b;return this};c.Polygon.prototype.classifyVertex=function(a){a=this.normal.dot(a)-this.w;return-1E-5>a?2:1E-5<a?1:0};c.Polygon.prototype.classifySide=function(a){var b,c,e=0,d=0,g=a.vertices.length;for(b=0;b<g;b++)c=a.vertices[b],c=this.classifyVertex(c),1===c?e++:2===c&&d++;return 0<e&&0===d?1:0===e&&0<d?2:0===e&&0===d?0:3};c.Polygon.prototype.splitPolygon=function(a,b,l,e,d){var g=this.classifySide(a);if(0===
g)(0<this.normal.dot(a.normal)?b:l).push(a);else if(1===g)e.push(a);else if(2===g)d.push(a);else{var h,k,n,m,g=[],p=[];l=0;for(b=a.vertices.length;l<b;l++)h=(l+1)%b,m=a.vertices[l],h=a.vertices[h],k=this.classifyVertex(m),n=this.classifyVertex(h),2!=k&&g.push(m),1!=k&&p.push(m),3===(k|n)&&(k=(this.w-this.normal.dot(m))/this.normal.dot(h.clone().subtract(m)),m=m.interpolate(h,k),g.push(m),p.push(m));3<=g.length&&e.push((new c.Polygon(g)).calculateProperties());3<=p.length&&d.push((new c.Polygon(p)).calculateProperties())}};
c.Vertex=function(a,b,c,e,d){this.x=a;this.y=b;this.z=c;this.normal=e||new T.V3;this.uv=d||new T.Vector2};c.Vertex.prototype.clone=function(){return new c.Vertex(this.x,this.y,this.z,this.normal.clone(),this.uv.clone())};c.Vertex.prototype.add=function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this};c.Vertex.prototype.subtract=function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this};c.Vertex.prototype.multiplyScalar=function(a){this.x*=a;this.y*=a;this.z*=a;return this};c.Vertex.prototype.cross=
function(a){var b=this.x,c=this.y,e=this.z;this.x=c*a.z-e*a.y;this.y=e*a.x-b*a.z;this.z=b*a.y-c*a.x;return this};c.Vertex.prototype.normalize=function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);this.x/=a;this.y/=a;this.z/=a;return this};c.Vertex.prototype.dot=function(a){return this.x*a.x+this.y*a.y+this.z*a.z};c.Vertex.prototype.lerp=function(a,b){this.add(a.clone().subtract(this).multiplyScalar(b));this.normal.add(a.normal.clone().sub(this.normal).multiplyScalar(b));this.uv.add(a.uv.clone().sub(this.uv).multiplyScalar(b));
return this};c.Vertex.prototype.interpolate=function(a,b){return this.clone().lerp(a,b)};c.Vertex.prototype.applyMatrix4=function(a){var b=this.x,c=this.y,e=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*e+a[12];this.y=a[1]*b+a[5]*c+a[9]*e+a[13];this.z=a[2]*b+a[6]*c+a[10]*e+a[14];return this};c.Node=function(a){var b,l,e=[],d=[];this.polygons=[];this.front=this.back=void 0;if(a instanceof Array&&0!==a.length){this.divider=a[0].clone();b=0;for(l=a.length;b<l;b++)this.divider.splitPolygon(a[b],this.polygons,
this.polygons,e,d);0<e.length&&(this.front=new c.Node(e));0<d.length&&(this.back=new c.Node(d))}};c.Node.isConvex=function(a){var b,c;for(b=0;b<a.length;b++)for(c=0;c<a.length;c++)if(b!==c&&2!==a[b].classifySide(a[c]))return!1;return!0};c.Node.prototype.build=function(a){var b,l,e=[],d=[];this.divider||(this.divider=a[0].clone());b=0;for(l=a.length;b<l;b++)this.divider.splitPolygon(a[b],this.polygons,this.polygons,e,d);0<e.length&&(this.front||(this.front=new c.Node),this.front.build(e));0<d.length&&
(this.back||(this.back=new c.Node),this.back.build(d))};c.Node.prototype.allPolygons=function(){var a=this.polygons.slice();this.front&&(a=a.concat(this.front.allPolygons()));this.back&&(a=a.concat(this.back.allPolygons()));return a};c.Node.prototype.clone=function(){var a=new c.Node;a.divider=this.divider.clone();a.polygons=this.polygons.map(function(a){return a.clone()});a.front=this.front&&this.front.clone();a.back=this.back&&this.back.clone();return a};c.Node.prototype.invert=function(){var a,
b;a=0;for(b=this.polygons.length;a<b;a++)this.polygons[a].flip();this.divider.flip();this.front&&this.front.invert();this.back&&this.back.invert();a=this.front;this.front=this.back;this.back=a;return this};c.Node.prototype.clipPolygons=function(a){var b,c,e,d;if(!this.divider)return a.slice();e=[];d=[];b=0;for(c=a.length;b<c;b++)this.divider.splitPolygon(a[b],e,d,e,d);this.front&&(e=this.front.clipPolygons(e));d=this.back?this.back.clipPolygons(d):[];return e.concat(d)};c.Node.prototype.clipTo=function(a){this.polygons=
a.clipPolygons(this.polygons);this.front&&this.front.clipTo(a);this.back&&this.back.clipTo(a)};return c}();
