var EPSILON=1E-4;
T.GeometryUtils.distanceBetweenLineSegments=function(a,b,d,c){var e,f,m,k,n,h,g,l;e=new T.V3;e.subVectors(b,a);b=new T.V3;b.subVectors(c,d);c=new T.V3;c.subVectors(a,d);d=e.dot(e);f=e.dot(b);m=b.dot(b);k=e.dot(c);n=b.dot(c);a=l=h=d*m-f*f;h<EPSILON?(g=0,l=1,h=n,a=m):(g=f*n-m*k,h=d*n-f*k,0>g?(g=0,h=n,a=m):g>l&&(g=l,h=n+f,a=m));0>h?(h=0,0>-k?g=0:-k>d?g=l:(g=-k,l=d)):h>a&&(h=a,0>-k+f?g=0:-k+f>d?g=l:(g=-k+f,l=d));d=Math.abs(g)<EPSILON?0:g/l;f=Math.abs(h)<EPSILON?0:h/a;a=new T.V3;a.copy(e);a.multiplyScalar(d);
e=new T.V3;e.copy(b);e.multiplyScalar(f);b=new T.V3;b.copy(c);b.add(a);b.sub(e);return b.length()};T.GeometryUtils.closestLinePointToPoint=function(a,b,d){var c=new T.V3,e=new T.V3;c.subVectors(a,b);e.subVectors(d,b);a=e.dot(e);c=e.dot(c);c=T.Math.clamp(c/a,0,1);return e.multiplyScalar(c).add(b)};T.GeometryUtils.distanceBetweenPointAndLineSegment=function(a,b,d){return a.distanceTo(T.GeometryUtils.closestLinePointToPoint(a,b,d))};
T.GeometryUtils.closestPlanePointToLineSegment=function(a,b,d){var c=new T.Line3(b,d);if(a.isIntersectionLine(c))return a.intersectLine(c);c=a.projectPoint(b);a=a.projectPoint(b);return b.distanceToSquared(c)<d.distanceToSquared(a)?c:a};T.GeometryUtils.distanceBetweenPlaneAndLineSegment=function(a,b,d){var c=new T.Line3(b,d);if(a.isIntersectionLine(c))return 0;b=a.distanceToPoint(b);a=a.distanceToPoint(d);return Math.min(b,a)};
T.GeometryUtils.pointInsideTriangle=function(a,b,d,c){c=(new T.V3).subVectors(c,b);d=(new T.V3).subVectors(d,b);var e=(new T.V3).subVectors(a,b);a=c.dot(c);b=c.dot(d);c=c.dot(e);var f=d.dot(d);d=d.dot(e);e=a*f-b*b;if(0==e)return!1;e=1/e;f=(f*c-b*d)*e;a=(a*d-b*c)*e;return 0<=f&&0<=a&&1>f+a};
T.GeometryUtils.lineSegmentIntersectsTriangle=function(a,b,d,c,e){var f=(new T.Plane).setFromCoplanarPoints(d,c,e);a=new T.Line3(a,b);if(!f.isIntersectionLine(a))return!1;f=f.intersectLine(a);return T.GeometryUtils.pointInsideTriangle(f,d,c,e)};T.GeometryUtils.pointAboveTriangle=function(a,b,d,c){var e=(new T.Plane).setFromCoplanarPoints(b,d,c);return T.GeometryUtils.pointInsideTriangle(e.projectPoint(a),b,d,c)};
T.GeometryUtils.distanceBetweenLineSegmentAndTriangle=function(a,b,d,c,e){var f=(new T.Plane).setFromCoplanarPoints(d,c,e),f=T.GeometryUtils.closestPlanePointToLineSegment(f,a,b);if(T.GeometryUtils.pointInsideTriangle(f,d,c,e))return T.GeometryUtils.distanceBetweenPointAndLineSegment(f,a,b);f=T.GeometryUtils.distanceBetweenLineSegments(a,b,d,c);c=T.GeometryUtils.distanceBetweenLineSegments(a,b,c,e);a=T.GeometryUtils.distanceBetweenLineSegments(a,b,e,d);return Math.min(f,c,a)};
