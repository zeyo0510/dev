T.RemoveSharpTrianglesOperation=function(a,c){T.OperationBase.call(this,a,c);this.initIterations(4,[1,1,1,1],1,1);this.maxEdgeLength=.01;this.maxAngleCos=.99;this.minQuality=.01};T.RemoveSharpTrianglesOperation.prototype=Object.create(T.OperationBase.prototype);
T.RemoveSharpTrianglesOperation.prototype.estimateParameters=function(a){(a=T.GeometryUtils.getGlobalBoundingBox(a))&&Infinity!==Math.abs(a.min.distanceTo(a.max))&&(a=Math.abs(a.max.z-a.min.z),editor&&editor.scene&&editor.scene instanceof T.Platform&&editor.scene.isPlatformVisible()?this.maxEdgeLength=Math.min(editor.scene.featureResolution,editor.scene.layerThickness)/2:this.maxEdgeLength=1E3<a?a/1E4:10<a?.04:.1<a?.001:a/1E3)};
T.RemoveSharpTrianglesOperation.prototype.preOperateObject=function(a,c){T.OperationBase.prototype.preOperateObject.call(this,a,c);c.newGeometry=c.geometry.clone();var b=c.newGeometry;b.mergeVertices();b.computeFaceNormals();this.removed=1};T.RemoveSharpTrianglesOperation.prototype.postOperateObject=function(a,c){var b=new T.Mesh(c.newGeometry,c.material.clone());c.newGeometry=void 0;return T.OperationBase.prototype.postOperateMesh.call(this,a,c,b)};
T.RemoveSharpTrianglesOperation.prototype.operateIteration=function(a,c){var b=a.newGeometry,d=this.maxEdgeLength*this.maxEdgeLength,g=T.GeometryUtils.updateEdgeFaces(b,!0);this.removed=T.RemoveSharpTrianglesOperation.removeSharpTrianglesIteration(a,g,d,this.minQuality,this.maxAngleCos);b.edgeFaceMap=void 0};
T.RemoveSharpTrianglesOperation.collapseEdge=function(a,c,b,d,g,e){if(a==c)return!1;e=T.GeometryUtils.orderedKey(a,c);if((e=d[e])&&0<e.length){e=T.GeometryUtils.getFacesAdjacentToVertex(a,e[0],b,d);for(var h=0;h<e.length;++h){var k=e[h];if(face=b.faces[k]){T.GeometryUtils.removeFaceFromEdgeFacesMap(k,b,d);face.a==a&&(face.a=c);face.b==a&&(face.b=c);face.c==a&&(face.c=c);face.d==a&&(face.d=c);T.GeometryUtils.addFaceToEdgeFacesMap(k,b,d);if(g){var m=g[c];m&&(void 0!==m.length?m.push(k):m[k]=!0)}T.GeometryUtils.computeFaceNormal.call(b,
face)}}g&&(g[a]=void 0!==e.length?[]:{})}a=b.vertices[a];c=b.vertices[c];c.onBadEdge||(c.onBadEdge=a.onBadEdge);return a.removed=!0};
T.RemoveSharpTrianglesOperation.shouldFlipEdge=function(a,c,b,d,g,e,h){g=T.GeometryUtils.orderedKey(a,c);g=d[g];h=h?h:.99;if(!g||2!=g.length)return!1;d=g[0];g=g[1];face1=b.faces[d];face2=b.faces[g];if(!face1||!face2||d==g||T.GeometryUtils.sameOrder(face1,a,c)==T.GeometryUtils.sameOrder(face2,a,c)||face1.normal.dot(face2.normal)<h)return!1;e=T.GeometryUtils.getOppositeFaceVertex(face1,a,c);var k=T.GeometryUtils.getOppositeFaceVertex(face2,a,c);if(-1==e||-1==k||a==e||a==k||c==e||c==k||e==k)return!1;
g=face1.clone();d=face2.clone();if(!T.RemoveSharpTrianglesOperation._flipEdge(void 0,void 0,g,d,a,c,b)||face1.normal.dot(g.normal)<h||face2.normal.dot(d.normal)<h)return!1;a=b.vertices[a].distanceToSquared(b.vertices[c]);c=b.vertices[e].distanceToSquared(b.vertices[k]);if(2*a<c)return!1;a=a>c;a||(a=T.GeometryUtils.getFaceQuality.call(b,face1),c=T.GeometryUtils.getFaceQuality.call(b,face2),h=T.GeometryUtils.getFaceQuality.call(b,g),b=T.GeometryUtils.getFaceQuality.call(b,d),a=Math.min(a,c)>Math.min(h,
b));return a};T.RemoveSharpTrianglesOperation.flipEdge=function(a,c,b,d,g){var e=T.GeometryUtils.orderedKey(a,c),h=d[e];if(h&&2==h.length&&(e=h[0],h=h[1],face1=b.faces[e],face2=b.faces[h],void 0!=e&&void 0!=h))return T.GeometryUtils.removeFaceFromEdgeFacesMap(e,b,d),T.GeometryUtils.removeFaceFromEdgeFacesMap(h,b,d),a=T.RemoveSharpTrianglesOperation._flipEdge(e,h,face1,face2,a,c,b,d,g),T.GeometryUtils.addFaceToEdgeFacesMap(e,b,d),T.GeometryUtils.addFaceToEdgeFacesMap(h,b,d),a};
T.RemoveSharpTrianglesOperation._flipEdge=function(a,c,b,d,g,e,h,k,m){if(!b||!d)return!1;k=T.GeometryUtils.getOppositeFaceVertex(b,g,e);var p=T.GeometryUtils.getOppositeFaceVertex(d,g,e);if(-1==k||-1==p)return!1;var l=T.GeometryUtils.getEdgeFaceDirection(b,g,e),f=T.GeometryUtils.getEdgeFaceDirection(d,g,e);if(-1!=l*f)return!1;b.a==e&&(b.a=p);b.b==e&&(b.b=p);b.c==e&&(b.c=p);b.d==e&&(b.d=p);d.a==g&&(d.a=k);d.b==g&&(d.b=k);d.c==g&&(d.c=k);d.d==g&&(d.d=k);m&&void 0!=a&&void 0!=c&&(g=m[g],e=m[e],l=m[k],
m=m[p],g||e||l||m)&&(void 0!==(g?g.length:e?e.length:l?l.length:m?m.length:void 0)?(e&&T.GeometryUtils.removeItemsFromArray.call(e,a),g&&T.GeometryUtils.removeItemsFromArray.call(g,c),m&&m.push(a),l&&l.push(c)):(e&&void 0!==e[a]&&delete e[a],g&&void 0!==g[c]&&delete g[c],m&&(m[a]=!0),l&&(l[c]=!0)));T.GeometryUtils.computeFaceNormal.call(h,b);T.GeometryUtils.computeFaceNormal.call(h,d);return{v1:k,v2:p}};
T.RemoveSharpTrianglesOperation.getEdgeQuality=function(a,c,b,d){a=T.GeometryUtils.orderedKey(a,c);return T.RemoveSharpTrianglesOperation._getEdgeQuality(d[a],b)};T.RemoveSharpTrianglesOperation._getEdgeQuality=function(a,c){if(!a)return 0;for(var b,d=1,g=0;g<a.length;++g)if(b=c.faces[a[g]])b=T.GeometryUtils.getFaceQuality.call(c,b),b<d&&(d=b);return d};
T.RemoveSharpTrianglesOperation.getBestAdjacentEdgesCollapse=function(a,c,b,d,g,e,h,k,m){a=T.GeometryUtils.orderedKey(a,c);if(c=d[a]){for(var p=[],l=0;l<c.length;++l){var f=b.faces[c[l]];f&&(a=T.GeometryUtils.getFaceQuality.call(b,f),a<g&&(p.push({error:T.RemoveSharpTrianglesOperation.getCollapseEdgeError(f.a,f.b,b,d,e,h,k,m),v1:f.a,v2:f.b}),p.push({error:T.RemoveSharpTrianglesOperation.getCollapseEdgeError(f.b,f.a,b,d,e,h,k,m),v1:f.b,v2:f.a}),p.push({error:T.RemoveSharpTrianglesOperation.getCollapseEdgeError(f.b,
f.c,b,d,e,h,k,m),v1:f.b,v2:f.c}),p.push({error:T.RemoveSharpTrianglesOperation.getCollapseEdgeError(f.c,f.b,b,d,e,h,k,m),v1:f.c,v2:f.b}),f instanceof T.F3?(p.push({error:T.RemoveSharpTrianglesOperation.getCollapseEdgeError(f.c,f.a,b,d,e,h,k,m),v1:f.c,v2:f.a}),p.push({error:T.RemoveSharpTrianglesOperation.getCollapseEdgeError(f.a,f.c,b,d,e,h,k,m),v1:f.a,v2:f.c})):(p.push({error:T.RemoveSharpTrianglesOperation.getCollapseEdgeError(f.c,f.d,b,d,e,h,k,m),v1:f.c,v2:f.d}),p.push({error:T.RemoveSharpTrianglesOperation.getCollapseEdgeError(f.d,
f.c,b,d,e,h,k,m),v1:f.d,v2:f.c}),p.push({error:T.RemoveSharpTrianglesOperation.getCollapseEdgeError(f.d,f.a,b,d,e,h,k,m),v1:f.d,v2:f.a}),p.push({error:T.RemoveSharpTrianglesOperation.getCollapseEdgeError(f.a,f.d,b,d,e,h,k,m),v1:f.a,v2:f.d}))))}p.sort(function(a,b){return(void 0==a.error?Number.MAX_VALUE:a.error)-(void 0==b.error?Number.MAX_VALUE:b.error)});if(0<p.length&&void 0!==p[0].error)return p[0]}};
T.RemoveSharpTrianglesOperation.getCollapseEdgeError=function(a,c,b,d,g,e,h,k){var m=0,p=0,l=T.GeometryUtils.orderedKey(a,c),l=d[l],f=b.vertices[a],n=b.vertices[c];if(!l||0==l.length||!f||!n||f.removed||n.removed)return 0;d=T.GeometryUtils.getFacesAdjacentToVertex(a,l[0],b,d);if(k||!(2>=d.length)){for(var q,t,u,r=0;r<d.length;++r)if(face=b.faces[d[r]]){u=T.GeometryUtils.triangleArea(b.vertices[face.a],b.vertices[face.b],b.vertices[face.c]);if(e&&h&&f.onBadEdge){if(!k&&n.onBadEdge&&0==l.length%2)return;
q=e.localToWorld(f.clone()).distanceTo(e.localToWorld(n.clone()));if(q>10*h||u/q*2>h)return}q=face.normal;var v={a:face.a,b:face.b,c:face.c,normal:new T.V3(0,0,0)};if(face.a===a)v.a=c;else if(face.b===a)v.b=c;else if(face.c===a)v.c=c;else continue;t=T.GeometryUtils.computeFaceNormal.call(b,v);if(0!=t.lengthSq()){if(q.dot(t)<g)return;m+=u;p+=T.GeometryUtils.triangleArea(b.vertices[v.a],b.vertices[v.b],b.vertices[v.c])}}return Math.abs(m-p)}};
T.RemoveSharpTrianglesOperation.removeSharpTrianglesIteration=function(a,c,b,d,g,e,h){var k=0,m=0,p=Math.sqrt(b),l=a.newGeometry?a.newGeometry:a.geometry;if(c){var f,n,q,t=e;if(!t){var t=[],u;for(u in c){if(this.cancelled)break;edgeFaces=c[u];n=T.GeometryUtils.getIndexesFromKey(u);f=n[0];n=n[1];edgeFaces&&0<edgeFaces.length&&0==edgeFaces.length%2?(q=a.localToWorld(l.vertices[f].clone()).distanceToSquared(a.localToWorld(l.vertices[n].clone())),(q<=b||T.RemoveSharpTrianglesOperation._getEdgeQuality(edgeFaces,
l)<d)&&t.push({v1:f,v2:n,edgeLengthSq:q})):(l.vertices[f].onBadEdge=!0,l.vertices[n].onBadEdge=!0)}}f=0;for(u=t.length;f<u&&!this.cancelled;++f){n=t[f];q=l.vertices[n.v1];var r=l.vertices[n.v2];if(!0!==q.removed&&!0!==r.removed)if(q=a.localToWorld(q.clone()).distanceToSquared(a.localToWorld(r.clone())),q<=b)q=T.RemoveSharpTrianglesOperation.getCollapseEdgeError(n.v1,n.v2,l,c,g,a,p,void 0!==e),r=T.RemoveSharpTrianglesOperation.getCollapseEdgeError(n.v2,n.v1,l,c,g,a,p,void 0!==e),void 0!==q&&(void 0===
r||q<r)?(T.RemoveSharpTrianglesOperation.collapseEdge(n.v1,n.v2,l,c,h,a),++k):void 0!==r&&(T.RemoveSharpTrianglesOperation.collapseEdge(n.v2,n.v1,l,c,h,a),++k);else if(T.RemoveSharpTrianglesOperation.shouldFlipEdge(n.v1,n.v2,l,c,d,a))T.RemoveSharpTrianglesOperation.flipEdge(n.v1,n.v2,l,c,h),++m;else if(!e||T.RemoveSharpTrianglesOperation.getEdgeQuality(n.v1,n.v2,l,c)<d)if(n=T.RemoveSharpTrianglesOperation.getBestAdjacentEdgesCollapse(n.v1,n.v2,l,c,d,g,a,p,void 0!==e))T.RemoveSharpTrianglesOperation.collapseEdge(n.v1,
n.v2,l,c,h,a),++k}}l.mergeVertices();0<k+m&&console.log("Removed "+k+" sharp faces; "+m+" flipped.");return k};
