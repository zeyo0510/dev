T.closestEdgeSearch=function(a,b,c,d){this.edgeBuckets={};this.poolBucket={};this.poolBucketSize=0;this.matrixWorld=d;this.maxDistance=a;this.minCoordinates=c.min;this.zBuckets=this.yBuckets=this.xBuckets=1;c=c.size();d=c.x*c.y*c.z;0<d&&0<a&&(b=Math.cbrt(b/d),this.xBuckets=Math.max(Math.min(Math.floor(b*c.x),Math.ceil(c.x/(2*a))),1),this.yBuckets=Math.max(Math.min(Math.floor(b*c.y),Math.ceil(c.y/(2*a))),1),this.zBuckets=Math.max(Math.min(Math.floor(b*c.z),Math.ceil(c.z/(2*a))),1));this.xScale=this.xBuckets/
c.x;this.yScale=this.yBuckets/c.y;this.zScale=this.zBuckets/c.z;this.maxEdgeBuckets=Math.ceil(Math.max(this.xBuckets,this.yBuckets,this.zBuckets)/2)};T.closestEdgeSearch.prototype._getKeyX=function(a){return Math.floor((a-this.minCoordinates.x)*this.xScale)};T.closestEdgeSearch.prototype._getKeyY=function(a){return Math.floor((a-this.minCoordinates.y)*this.xScale)};T.closestEdgeSearch.prototype._getKeyZ=function(a){return Math.floor((a-this.minCoordinates.z)*this.xScale)};
T.closestEdgeSearch.prototype.getVertexKey=function(a){return this._getKeyX(a.x)+"_"+this._getKeyY(a.y)+"_"+this._getKeyZ(a.z)};T.closestEdgeSearch.prototype._inPoolBucket=function(a,b){return(Math.abs(this._getKeyX(a.x)-this._getKeyX(b.x))+1)*(Math.abs(this._getKeyY(a.y)-this._getKeyY(b.y))+1)*(Math.abs(this._getKeyZ(a.z)-this._getKeyZ(b.z))+1)>this.maxEdgeBuckets};
T.closestEdgeSearch.prototype._insertBucketKey=function(a,b){void 0==this.edgeBuckets[a]&&(this.edgeBuckets[a]={});this.edgeBuckets[a][b]=!0};T.closestEdgeSearch.prototype.insertEdge=function(a,b,c){var d=this;a=a.clone().applyMatrix4(this.matrixWorld);b=b.clone().applyMatrix4(this.matrixWorld);this._inPoolBucket(a,b)?(this.poolBucket[c]=!0,++this.poolBucketSize):this._traverseKeys(a,b,function(a){d._insertBucketKey(a,c)})};
T.closestEdgeSearch.prototype._removeBucketKey=function(a,b){var c=this.edgeBuckets[a];void 0!=c&&void 0!=c[b]&&delete c[b]};T.closestEdgeSearch.prototype.removeEdge=function(a,b,c){var d=this;a=a.clone().applyMatrix4(this.matrixWorld);b=b.clone().applyMatrix4(this.matrixWorld);this._inPoolBucket(a,b)?void 0!=this.poolBucket[c]&&(delete this.poolBucket[c],--this.poolBucketSize):this._traverseKeys(a,b,function(a){d._removeBucketKey(a,c)})};
T.closestEdgeSearch.prototype.moveEdgePoint=function(a,b,c,d,k){var e=a.clone().applyMatrix4(this.matrixWorld),h=b.clone().applyMatrix4(this.matrixWorld),e=this.getVertexKey(e),l=this.getVertexKey(h),h=0==d?a:b;d=0==d?e:l;e=this.getVertexKey(k);d==e==this._inPoolBucket(a,b)&&(this.removeEdge(a,b,c),this.insertEdge(h,k,c))};
T.closestEdgeSearch.prototype._traverseKeys=function(a,b,c){var d=this._getKeyX(Math.min(a.x,b.x)),k=this._getKeyY(Math.min(a.y,b.y)),e=this._getKeyZ(Math.min(a.z,b.z)),h=this._getKeyX(Math.max(a.x,b.x)),l=this._getKeyY(Math.max(a.y,b.y));a=this._getKeyZ(Math.max(a.z,b.z));var f,g;for(b=d;b<=h;++b)for(f=k;f<=l;++f)for(g=e;g<=a;++g)if(d=b+"_"+f+"_"+g,c(d))return};
T.closestEdgeSearch.prototype.traverseCloseEdges=function(a,b,c){a=a.clone().applyMatrix4(this.matrixWorld);var d=this._getKeyX(a.x-b),k=this._getKeyY(a.y-b),e=this._getKeyZ(a.z-b),h=this._getKeyX(a.x+b),l=this._getKeyY(a.y+b);a=this._getKeyZ(a.z+b);for(var f,g,m;d<=h;++d)for(b=k;b<=l;++b)for(f=e;f<=a;++f)if(m=this.edgeBuckets[d+"_"+b+"_"+f])for(g in m)if(c(g))return;for(g in this.poolBucket)if(c(g))break};
