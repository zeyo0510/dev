T.MeasurementRadius=function(){T.Measurement.call(this);this.createGizmo=function(e){return this.measurementGizmo=new T.MeasurementGizmoRadius(this,e)};this.getValue=function(){return this.measurementGizmo.getValue()};this.getInfo=function(){var e=this.measurementGizmo.getControlPointsWorld(),k=[],c=this.measurementGizmo.circleFit.center;k.push({name:"Center ",values:[c.x,c.y,c.z]});for(c=0;c<Math.min(3,e.length);++c)k.push({name:"Point "+(c+1).toString(),values:[e[c].x,e[c].y,e[c].z]});return k};
this.getType=function(){return"Radius"};this.getDescription=function(){return null==this.getValue()?"radius":"radius = "+this.measurementGizmo.circleFit.radius.toFixed(2)}};T.MeasurementRadius.prototype=Object.create(T.Measurement.prototype);
T.MeasurementGizmoRadius=function(e,k){T.MeasurementGizmo.call(this,e,k);this.circleFit=new CircleFitting;var c=this;this.handleGizmos={CIRCLE:[new T.Mesh(new T.TorusGeometry(10,.3,2,36),new T.MeasurementGizmoMaterial({color:16711680,opacity:.2}))],START:[new T.Mesh(new T.SphereGeometry(2),new T.MeasurementGizmoMaterial({color:16711680,opacity:.4}))],MIDDLE:[new T.Mesh(new T.SphereGeometry(2),new T.MeasurementGizmoMaterial({color:16711680,opacity:.4}))],END:[new T.Mesh(new T.SphereGeometry(2),new T.MeasurementGizmoMaterial({color:16711680,
opacity:.4}))],CENTER:[new T.Mesh(new T.SphereGeometry(2),new T.MeasurementGizmoMaterial({color:16711680,opacity:.4}))],ARROW:[new T.Mesh(new T.CylinderGeometry(3,0,6,8,1,!1),new T.MeasurementGizmoMaterial({color:16711680,opacity:.4})),new T.V3(0,1,0),new T.V3(Math.PI/2,0,0)],RADIUS:[new T.Mesh(new T.CylinderGeometry(1,1,1,4,1,!1),new T.MeasurementGizmoMaterial({color:16711680,opacity:.4})),new T.V3(0,.5,0),new T.V3(Math.PI/2,0,0)],LINE:[new T.Mesh(new T.CylinderGeometry(1,1,1,4,1,!1),new T.MeasurementGizmoMaterial({color:0,
opacity:.2})),new T.V3(0,.5,0),new T.V3(Math.PI/2,0,0)]};this.pickerGizmos={ARROW:[new T.Mesh(new T.SphereGeometry(4),T.MeasurementPickerMaterial)],RADIUS:[new T.Mesh(new T.CylinderGeometry(3,3,1,4,1,!1),T.MeasurementPickerMaterial),new T.V3(0,.5,0),new T.V3(Math.PI/2,0,0)],LINE:[new T.Mesh(new T.CylinderGeometry(3,3,1,4,1,!1),T.MeasurementPickerMaterial),new T.V3(0,.5,0),new T.V3(Math.PI/2,0,0)],TEXT:[new T.Mesh(new T.SphereGeometry(4),T.MeasurementPickerMaterial)]};this.addControlPoint=function(l,
b,d,f,g){b=3>c.controlPoints.length?b:c.controlPoints[0].object;T.MeasurementGizmo.prototype.addControlPoint.call(this,l,b,d,f,g);1==c.controlPoints.length&&b&&(b.add(this.measurement),g&&g(this.measurement));this.show()};this.acceptPoints=function(){return 3>this.controlPoints.length};this.mustDragGizmo=function(){return 3==this.controlPoints.length?this.pickerGizmos.TEXT[0]:!1};this.mustSnapToPart=function(){return 3>this.controlPoints.length};this.update=function(l){if(this.isVisible()){this.show();
var b=c.getWidth(c.getCenterPointWorld(),l),d,f=c.getControlPointsWorld();switch(c.controlPoints.length){case 4:var g=c.getValue();d=c.circleFit.center;var h=c.circleFit.normal,a=c.handleGizmos.CIRCLE[0];a.visible=!1;c.handleGizmos.CENTER[0].visible=!1;c.handleGizmos.RADIUS[0].visible=!1;c.handleGizmos.LINE[0].visible=!1;c.handleGizmos.ARROW[0].visible=!1;if(1E-4<h.length()&&0<g){var e=projectPointToPlane(f[3],f[1],h),k=d.distanceTo(e),m=(new T.V3).copy(d).add(h),h=(new T.V3).copy(e).sub(d).setLength(2*
b);a.position.copy(d);a.lookAt(m);a.scale.set(g/10.3,g/10.3,b);a.visible=!0;a=c.handleGizmos.CENTER[0];a.position.copy(d);a.scale.set(b,b,b);a.visible=!0;g>4*b&&(a=c.handleGizmos.RADIUS[0],a.position.copy(d).add(h),a.lookAt(e),a.scale.set(b,b,g-4*b),a.visible=!0,a=c.pickerGizmos.RADIUS[0],a.position.copy(d).add(h),a.lookAt(e),a.scale.set(b,b,g-4*b));m=(new T.V3).copy(h).setLength(g-2*b).add(d);a=c.handleGizmos.ARROW[0];a.position.copy(m);a.lookAt(d);a.scale.set(b,b,b);a.visible=!0;a=c.pickerGizmos.ARROW[0];
a.position.copy(m);a.scale.set(b,b,b);d=k-g;d>4*b&&(a=c.handleGizmos.LINE[0],a.position.copy(m).add(h),a.lookAt(e),a.scale.set(b,b,d-4*b),a.visible=!0,a=c.pickerGizmos.LINE[0],a.position.copy(m).add(h),a.lookAt(e),a.scale.set(b,b,d-4*b))}a=c.pickerGizmos.TEXT[0];a.position.copy(f[3]);a.scale.set(b,b,b);c.setText("R "+g.toFixed(2),f[3],l);case 3:b=c.getWidth(f[2],l),a=c.handleGizmos.END[0],a.position.copy(f[2]),a.scale.set(b,b,b),a.visible=!0;case 2:b=c.getWidth(f[1],l),a=c.handleGizmos.MIDDLE[0],
a.position.copy(f[1]),a.scale.set(b,b,b),a.visible=!0;case 1:b=c.getWidth(f[0],l),a=c.handleGizmos.START[0],a.position.copy(f[0]),a.scale.set(b,b,b),a.visible=!0}}else this.hide()};this.onGizmoMoved=function(c,b){switch(c){case "ARROW":case "RADIUS":case "LINE":case "TEXT":if(4==this.controlPoints.length){var d=this.getControlPointsWorld(),f=(new T.V3).subVectors(d[2],d[1]),d=(new T.V3).subVectors(d[0],d[1]),f=(new T.V3).copy(f).cross(d);1E-4<f.length()&&this.offsetControlPoint(3,(new T.V3).copy(b).projectOnPlane(f))}}};
this.getValue=function(){if(3>this.controlPoints.length)return null;var e=c.getControlPointsWorld();return this.circleFit.fitPoints(e[0],e[1],e[2])?this.circleFit.radius:0};this.init()};T.MeasurementGizmoRadius.prototype=Object.create(T.MeasurementGizmo.prototype);
