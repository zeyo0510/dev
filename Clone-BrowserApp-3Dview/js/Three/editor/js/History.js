var History=function(a){this.maxSize=10;this.array=[];this.current=this.arrayLength=-1;this.isRecording=!0;var d=this,c=a.signals;this.signals=a.signals;c.objectAdded.add(function(b){if(!1!==d.isRecording){var e=b.parent;d.add(function(){a.removeObject(b);a.select(null);c.materialChanged.dispatch()},function(){a.addObject(b,e);b instanceof T.Measurement&&c.restoreMeasurement.dispatch(b);T.SceneUtils.updateTriangleVisualization(b);a.select(b);c.materialChanged.dispatch()},function(a){"new"==a&&T.GeometryUtils.disposeObject(b)})}})};
History.prototype={add:function(a,d,c){if(this.current<this.maxSize)this.current++;else{var b=this.array.shift();b&&b.dispose&&b.dispose("old")}this.array[this.current]&&this.array[this.current].dispose&&this.array[this.current].dispose("new");this.array[this.current]={undo:a,redo:d,dispose:c};this.arrayLength=this.current;this.signals.historyAdded.dispatch()},undo:function(){this.canUndo()&&(this.isRecording=!1,this.array[this.current--].undo(),this.signals.historyUndo.dispatch(),this.isRecording=
!0)},redo:function(){this.canRedo()&&(this.isRecording=!1,this.array[++this.current].redo(),this.signals.historyRedo.dispatch(),this.isRecording=!0)},clear:function(){for(var a in this.array)this.array[a]&&this.array[a].dispose&&this.array[a].dispose("old");this.array=[];this.current=this.arrayLength=-1;this.signals.historyCleared.dispatch()},canUndo:function(){return 0<=this.current},canRedo:function(){return this.current<this.arrayLength}};
