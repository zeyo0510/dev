T.MeasurementInfo=function(){T.Measurement.call(this);this.createGizmo=function(a){return this.measurementGizmo=new T.MeasurementGizmoInfo(this,a)};this.getValue=function(){return null};this.getInfo=function(){var a=this.measurementGizmo.getValue();return null==a?[]:a};this.getType=function(){return"Point"};this.getDescription=function(){return"Point information"}};T.MeasurementInfo.prototype=Object.create(T.Measurement.prototype);
T.MeasurementGizmoInfo=function(a,g){T.MeasurementGizmo.call(this,a,g);var e=this;this.selectedObject=this.selectedFace=null;this.handleGizmos={START:[new T.Mesh(new T.SphereGeometry(2),new T.MeasurementGizmoMaterial({color:16711680,opacity:.4}))]};this.pickerGizmos={};this.addControlPoint=function(d,b,c,f,a){T.MeasurementGizmo.prototype.addControlPoint.call(this,d,b,c,f,a);1==e.controlPoints.length&&b&&(this.selectedFace=f,this.selectedObject=b,b.add(this.measurement),a&&a(this.measurement));this.show()};
this.acceptPoints=function(){return 1>this.controlPoints.length};this.mustDragGizmo=function(){return!1};this.mustSnapToPart=function(){return 1>this.controlPoints.length};this.update=function(d){if(this.isVisible()){this.show();d=e.getWidth(e.getCenterPointWorld(),d);var b=e.getControlPointsWorld();switch(e.controlPoints.length){case 1:var c=e.handleGizmos.START[0];c.position.copy(b[0]);c.scale.set(d,d,d);c.visible=!0}}else this.hide()};this.getValue=function(){if(1>this.controlPoints.length||!this.selectedFace||
!this.selectedObject||!this.selectedObject.geometry)return null;var d=e.getControlPointsWorld(),b=this.selectedObject.geometry,c=[this.selectedObject.localToWorld(b.vertices[this.selectedFace.a].clone()),this.selectedObject.localToWorld(b.vertices[this.selectedFace.b].clone()),this.selectedObject.localToWorld(b.vertices[this.selectedFace.c].clone())],a=new T.Matrix4;a.getInverse(this.selectedObject.parent.matrixWorld);a=(new T.Matrix3).getNormalMatrix(a);T.GeometryUtils.computeFaceNormal.call(b,this.selectedFace);
b=this.selectedFace.normal.clone().applyMatrix3(a).normalize();return[{name:"Point",values:[d[0].x,d[0].y,d[0].z]},{name:"Face",values:[{name:"Point1",values:[c[0].x,c[0].y,c[0].z]},{name:"Point2",values:[c[1].x,c[1].y,c[1].z]},{name:"Point3",values:[c[2].x,c[2].y,c[2].z]}]},{name:"Normal",values:[b.x,b.y,b.z]}]};this.init()};T.MeasurementGizmoInfo.prototype=Object.create(T.MeasurementGizmo.prototype);
