T.Face4Stub=function(e,l,p,u,h,d,t){this.a=e;this.b=l;this.c=p;this.d=u;this.normal=h instanceof T.V3?h:new T.V3;this.vertexNormals=h instanceof Array?h:[];this.color=d instanceof T.Color?d:new T.Color;this.vertexColors=d instanceof Array?d:[];this.vertexTangents=[];this.materialIndex=void 0!==t?t:0;this.centroid=new T.V3};
T.GeometryUtils.convertFace4s=function(e){var l=e.faces,p=e.faceVertexUvs[0],u=[],h=[],d,t,n,q;d=0;for(t=l.length;d<t;d++)n=l[d],q=p[d],n instanceof T.F3?(u.push(n),q&&h.push(q)):(u.push(new T.F3(n.a,n.b,n.c,null,n.color,n.materialIndex)),u.push(new T.F3(n.d,n.a,n.c,null,n.color,n.materialIndex)),q&&h.push([q[0],q[1],q[2]]),q&&h.push([q[3],q[0],q[2]]));e.faces=u;e.faceVertexUvs=[h]};
T.SubdivisionModifier=function(e){this.subdivisions=void 0===e?1:e;this.useOldVertexColors=!1;this.supportUVs=!0;this.debug=!1};
T.SubdivisionModifier.prototype.operate=function(e,l,p){var u=l.children.slice(0);if(!1!==p)for(var h=0;h<u.length;++h)this.operate(e,u[h],p);if(l instanceof T.Mesh&&!l.dummy){p=l.geometry.clone();var h=l.wallThicknessStarted||l.wallThicknessFinished?l.material.clone():l.material,d=T.SceneUtils.createMesh(p,h);T.Object3D.prototype.clone.call(l,d,!1);for(h=0;h<u.length;++h){var t=u[h];if(t instanceof T.Measurement){for(var n=t.measurementGizmo.controlPoints,q=t.measurementGizmo.getControlPointsWorld(),
x=0;x<q.length;++x)n[x].object=d,n[x].point=d.worldToLocal(q[x]);d.add(t);e.signals.objectAdded.dispatch(t)}}p.mergeVertices();p.computeFaceNormals();p.computeVertexNormals();this.modify(p);l.parent.add(d);d.updateMatrixWorld();e.signals.objectAdded.dispatch(d);e.removeHelper(l);l.parent.remove(l);e.signals.objectRemoved.dispatch(l);return d}return l};
T.SubdivisionModifier.prototype.modify=function(e){for(var l=this.subdivisions;0<l--;)this.smooth(e);T.GeometryUtils.convertFace4s(e);delete e.__tmpVertices;e.computeCentroids();e.computeFaceNormals();e.computeVertexNormals()};
T.SubdivisionModifier.prototype.smooth=function(e){function l(){z.debug&&console&&console.assert&&console.assert.apply(console,arguments)}function p(){z.debug&&console.log.apply(console,arguments)}function u(){console&&console.log.apply(console,arguments)}function h(a,b,c,f,e,k,h){var l=new T.Face4Stub(a,b,c,f,null,e.color,e.materialIndex);if(z.useOldVertexColors){l.vertexColors=[];for(var g,m,n,q=0;4>q;q++){n=k[q];g=new T.Color;g.setRGB(0,0,0);for(var r=0;r<n.length;r++)m=e.vertexColors[n[r]-1],
g.r+=m.r,g.g+=m.g,g.b+=m.b;g.r/=n.length;g.g/=n.length;g.b/=n.length;l.vertexColors[q]=g}}K.push(l);z.supportUVs&&(e=[d(a,""),d(b,h),d(c,h),d(f,h)],e[0]?e[1]?e[2]?e[3]?L.push(e):p("d :( ",f+":"+h):p("c :( ",c+":"+h):p("b :( ",b+":"+h):p("a :( ",a+":"+h))}function d(a,b){var c=a+":"+b,d=G[c];return d?d:(a>=E&&a<E+C.length?p("face pt"):p("edge pt"),u("warning, UV not found for",c),null)}function t(a,b,c){var d=a+":"+b;d in G?u("dup vertexNo",a,"oldFaceNo",b,"value",c,"key",d,G[d]):G[d]=c}function n(a,
b){void 0===A[a]&&(A[a]=[]);A[a].push(b)}function q(a,b,c){void 0===I[a]&&(I[a]={});I[a][b]=c}var x=[],K=[],L=[],z=this,B=T.GeometryUtils.orderedKey,D=T.GeometryUtils.computeEdgeFaces,w=e.vertices,C=e.faces,E=w.length,x=w.concat(),H=[],m={},M={},G={},b,y,g,c,a,f=e.faceVertexUvs[0],k;p("originalFaces, uvs, originalVerticesLength",C.length,f.length,E);if(z.supportUVs)for(b=0,y=f.length;b<y;b++)for(g=0,c=f[b].length;g<c;g++)k=C[b]["abcd".charAt(g)],t(k,b,f[b][g]);0==f.length&&(z.supportUVs=!1);b=0;for(a in G)b++;
b||(z.supportUVs=!1,p("no uvs"));b=0;for(y=C.length;b<y;b++)a=C[b],H.push(a.centroid),x.push(a.centroid),z.supportUVs&&(c=new T.Vector2,a instanceof T.F3?(c.x=d(a.a,b).x+d(a.b,b).x+d(a.c,b).x,c.y=d(a.a,b).y+d(a.b,b).y+d(a.c,b).y,c.x/=3,c.y/=3):a instanceof T.Face4Stub&&(c.x=d(a.a,b).x+d(a.b,b).x+d(a.c,b).x+d(a.d,b).x,c.y=d(a.a,b).y+d(a.b,b).y+d(a.c,b).y+d(a.d,b).y,c.x/=4,c.y/=4),t(E+b,"",c));var D=D(e),v;y=0;var r,A={},I={};for(b in D){f=D[b];c=b.split("_");k=c[0];r=c[1];n(k,[k,r]);n(r,[k,r]);g=0;
for(c=f.length;g<c;g++)a=f[g],q(k,a,b),q(r,a,b);2>f.length&&(M[b]=!0)}for(b in D)f=D[b],a=f[0],v=f[1],c=b.split("_"),k=c[0],r=c[1],c=new T.V3,l(0<f.length,"an edge without faces?!"),1==f.length?(c.add(w[k]),c.add(w[r]),c.multiplyScalar(.5)):(c.add(H[a]),c.add(H[v]),c.add(w[k]),c.add(w[r]),c.multiplyScalar(.25)),m[b]=E+C.length+y,x.push(c),y++,z.supportUVs&&(c=new T.Vector2,c.x=d(k,a).x+d(r,a).x,c.y=d(k,a).y+d(r,a).y,c.x/=2,c.y/=2,t(m[b],a,c),2<=f.length&&(l(2==f.length,"did we plan for more than 2 edges?"),
c=new T.Vector2,c.x=d(k,v).x+d(r,v).x,c.y=d(k,v).y+d(r,v).y,c.x/=2,c.y/=2,t(m[b],v,c)));p("-- Step 2 done");var F,J;r=["123","12","2","23"];v=["123","23","3","31"];var N=["123","31","1","12"],O=["1234","12","2","23"],P=["1234","23","3","34"],Q=["1234","34","4","41"],R=["1234","41","1","12"];b=0;for(y=H.length;b<y;b++)a=C[b],f=E+b,a instanceof T.F3?(c=B(a.a,a.b),k=B(a.b,a.c),F=B(a.c,a.a),h(f,m[c],a.b,m[k],a,r,b),h(f,m[k],a.c,m[F],a,v,b),h(f,m[F],a.a,m[c],a,N,b)):a instanceof T.Face4Stub?(c=B(a.a,a.b),
k=B(a.b,a.c),F=B(a.c,a.d),J=B(a.d,a.a),h(f,m[c],a.b,m[k],a,O,b),h(f,m[k],a.c,m[F],a,P,b),h(f,m[F],a.d,m[J],a,Q,b),h(f,m[J],a.a,m[c],a,R,b)):p("face should be a face!",a);m=new T.V3;a=new T.V3;b=0;for(y=w.length;b<y;b++)if(void 0!==A[b]){m.set(0,0,0);a.set(0,0,0);k=new T.V3(0,0,0);f=0;for(g in I[b])m.add(H[g]),f++;v=0;c=A[b].length;r=f!=c;for(g=0;g<c;g++)M[B(A[b][g][0],A[b][g][1])]&&v++;m.divideScalar(f);v=0;if(r){for(g=0;g<c;g++)if(f=A[b][g],N=1==D[B(f[0],f[1])].length)f=w[f[0]].clone().add(w[f[1]]).divideScalar(2),
a.add(f),v++;a.divideScalar(4);l(2==v,"should have only 2 boundary edges")}else{for(g=0;g<c;g++)f=A[b][g],f=w[f[0]].clone().add(w[f[1]]).divideScalar(2),a.add(f);a.divideScalar(c)}k.add(w[b]);r?(k.divideScalar(2),k.add(a)):(k.multiplyScalar(c-3),k.add(m),k.add(a.multiplyScalar(2)),k.divideScalar(c));x[b]=k}e.vertices=x;e.faces=K;e.faceVertexUvs[0]=L;delete e.__tmpVertices;e.computeCentroids();e.computeFaceNormals();e.computeVertexNormals()};
