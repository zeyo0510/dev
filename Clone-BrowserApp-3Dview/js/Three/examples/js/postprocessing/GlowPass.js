T.GlowPass=function(b,c,f,d,e){this.scene=b;this.sceneEnvironment=c;this.sceneHelpers=f;this.renderer=d;this.camera=e;this.wallThicknessMode=this.xrayMode=!1;this.floatTextures=this.renderer.supportsFloatTextures();this.enabled=!0;this.glowEnabled=!1;this.faces=this.renderer.info.render.faces;this.clearColor=new T.Color(0,0,0);T.GlowPass.prototype.setSize.call(this,window.innerWidth,window.innerHeight);this.copyPass=new T.ShaderPass(T.CopyShader);this.subtractPass=new T.ShaderPass(T.XrayCopyShader,
void 0,T.SubtractiveBlending);this.subtractPass.uniforms.opacity.value=.7;this.subtractPass.renderToScreen=!0;this.addPass=new T.ShaderPass(T.AddShader,"tDiffuse1");this.addPass.uniforms.addRatio.value=new T.Vector4(.3,.3,-1,0);this.addPass.uniforms.multiplyRatio.value=new T.Vector4(1,1,1,1);this.hBlurPass=new T.ShaderPass(T.HorizontalBlurShadowShader);this.hBlurPass.uniforms.h.value=1/512;this.hBlurPass.uniforms.clearColor.value=this.clearColor;this.vBlurPass=new T.ShaderPass(T.VerticalBlurMaskShader);
this.vBlurPass.uniforms.v.value=1/512;this.vBlurPass.uniforms.clearColor.value=this.clearColor;this.vBlurPass.uniforms.intensity.value=4;this.glowShaderPass=new T.ShaderPass(T.GlowShader);this.glowShaderPass.uniforms.vOffset.value=2/512;this.glowShaderPass.uniforms.hOffset.value=2/512;this.glowShaderPass.uniforms.intensity.value=1;this.glowShaderPass.uniforms.clearColor.value=this.clearColor;this.xrayUnpackPass=new T.ShaderPass(T.XrayUnpackShader,"tDiffuse1");this.xrayUnpackPass.clear=!0};
T.GlowPass.prototype={render:function(b){if(this.enabled){var c=this.renderer.renderSelectedMode,f=this.glowEnabled&&!this.wallThicknessMode,d=this.renderer.getClearColor().clone(),e=this.renderer.getClearAlpha(),g=T.SceneUtils.wireframeMaterial.visible;if(f)if(1E5<this.faces&&!T.SceneUtils.wireframeMaterial.visible)this.renderer.setClearColor(this.clearColor),this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_SELECTED,this.renderer.render(this.scene,this.camera,this.renderTarget0,!0),this.faces=
this.renderer.info.render.faces,this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_ALL,this.copyPass.render(this.renderer,this.renderTarget1,this.renderTarget0,b),this.renderer.setClearColor(d,e),this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_UNSELECTED,this.renderer.render(this.scene,this.camera,this.renderTarget0,this.xrayMode),this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_ALL,this.renderer.render(this.sceneEnvironment,this.camera,this.renderTarget0,!1),this.renderer.renderSelectedMode=
T.WebGLRenderer.RENDER_ALL,this.renderer.render(this.sceneHelpers,this.camera,this.renderTarget0,!1),this.renderer.setClearColor(this.clearColor),this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_ALL,this.hBlurPass.render(this.renderer,this.renderTarget2,this.renderTarget1,b),this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_ALL,this.vBlurPass.clear=!0,this.vBlurPass.uniforms.tMask.value=this.renderTarget1,this.vBlurPass.render(this.renderer,this.renderTarget3,this.renderTarget2,b),this.renderer.setClearColor(d,
e),this.addPass.renderToScreen=!0,this.addPass.uniforms.tDiffuse2.value=this.renderTarget3,this.addPass.render(this.renderer,this.renderTarget0,this.renderTarget0,b),this.xrayMode||this.renderer.clearDepth();else{var a=this.renderer.context;a.enable(a.STENCIL_TEST);a.stencilOp(a.REPLACE,a.REPLACE,a.REPLACE);a.stencilFunc(a.ALWAYS,0,4294967295);a.clearStencil(1);this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_SELECTED;this.renderer.render(this.scene,this.camera,null,!0);a.stencilOp(a.KEEP,
a.KEEP,a.KEEP);a.stencilFunc(a.EQUAL,1,4294967295);this.faces=this.renderer.info.render.faces;a.disable(a.STENCIL_TEST);this.xrayMode&&this.renderer.clearColor();this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_ALL;this.renderer.render(this.sceneEnvironment,this.camera,null,!1);this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_UNSELECTED;this.renderer.render(this.scene,this.camera,null,!1);this.xrayMode||this.renderer.clearDepth();a.enable(a.STENCIL_TEST);T.ObjectMaterial.outline=6;T.SceneUtils.wireframeMaterial.visible=
!1;this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_SELECTED;this.renderer.render(this.scene,this.camera,null,!1);T.SceneUtils.wireframeMaterial.visible=g;T.ObjectMaterial.outline=0;a.disable(a.STENCIL_TEST);this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_ALL;this.renderer.render(this.sceneHelpers,this.camera,null,!1)}else this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_ALL,this.renderer.render(this.sceneEnvironment,this.camera,null,!0),this.renderer.render(this.scene,this.camera),
this.renderer.render(this.sceneHelpers,this.camera),this.xrayMode||this.renderer.clearDepth();this.xrayMode&&(T.SceneUtils.wireframeMaterial.visible=!1,this.renderer.renderSelectedMode=f?T.WebGLRenderer.RENDER_SELECTED:T.WebGLRenderer.RENDER_ALL,this.floatTextures?(this.renderer.setClearColor(this.clearColor,0),this.scene.overrideMaterial=T.SceneUtils.xrayMaterial,this.renderer.render(this.scene,this.camera,this.renderTargetDistance,!0)):(this.renderer.setClearColor(this.clearColor,0),this.scene.overrideMaterial=
T.SceneUtils.xrayPackMaterial,T.SceneUtils.xrayPackMaterial.side=T.FrontSide,this.renderer.render(this.scene,this.camera,this.renderTarget0,!0),T.SceneUtils.xrayPackMaterial.side=T.BackSide,this.renderer.render(this.scene,this.camera,this.renderTarget1,!0),this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_ALL,this.xrayUnpackPass.uniforms.tDiffuse2.value=this.renderTarget1,this.xrayUnpackPass.render(this.renderer,this.renderTargetDistance,this.renderTarget0,b)),T.SceneUtils.wireframeMaterial.visible=
g,this.renderer.setClearColor(d,e),this.scene.overrideMaterial=null,this.subtractPass.renderToScreen=!0,this.renderer.renderSelectedMode=T.WebGLRenderer.RENDER_ALL,this.subtractPass.render(this.renderer,null,this.renderTargetDistance,b),this.renderer.clearDepth());this.renderer.renderSelectedMode=c}},setSize:function(b,c){this.renderTargetParameters={minFilter:T.LinearFilter,magFilter:T.LinearFilter,format:T.RGBAFormat,stencilBuffer:!0};this.renderTarget0=new T.WebGLRenderTarget(b,c,this.renderTargetParameters);
this.renderTarget1=this.renderTarget0.clone();this.renderTarget2=this.renderTarget0.clone();this.renderTarget3=this.renderTarget0.clone();this.renderTargetDistance=this.floatTextures?new T.WebGLRenderTarget(b,c,{minFilter:T.LinearFilter,magFilter:T.LinearFilter,type:T.FloatType,depthBuffer:!1,stencilBuffer:!1}):this.renderTarget2}};
