T.VerticalBlurMaskShader={uniforms:{tDiffuse:{type:"t",value:null},tMask:{type:"t",value:null},v:{type:"f",value:1/512},clearColor:{type:"c",value:new T.Color(0,0,0)},intensity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform sampler2D tMask;\nuniform float v;\nuniform vec3 clearColor;\nuniform float intensity;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nif (vec3(texture2D( tMask, vec2( vUv.x, vUv.y ) ) ) != clearColor) discard;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.091;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.091;\nif (vec3(sum) == vec3( 0.0 )) discard;\ngl_FragColor = intensity * sum;\n}"};
