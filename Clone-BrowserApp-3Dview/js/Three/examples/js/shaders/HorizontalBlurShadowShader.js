T.HorizontalBlurShadowShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512},clearColor:{type:"c",value:new T.Color(0,0,0)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nuniform vec3 clearColor;\nconst vec3 shadowColor = vec3( 1.0 );\nvarying vec2 vUv;\nvoid main() {\nfloat sum = 0.0;\nsum += vec3( texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) ) != clearColor ? 0.051 : 0.0;\nsum += vec3( texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) )  ) != clearColor ? 0.1118 : 0.0;\nsum += vec3( texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) )  ) != clearColor ? 0.12245 : 0.0;\nsum += vec3( texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) )  ) != clearColor ? 0.1531 : 0.0;\nsum += vec3( texture2D( tDiffuse, vec2( vUv.x, vUv.y ) )  ) != clearColor ? 0.1633 : 0.0;\nsum += vec3( texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) )  ) != clearColor ? 0.1531 : 0.0;\nsum += vec3( texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) )  ) != clearColor ? 0.12245 : 0.0;\nsum += vec3( texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) )  ) != clearColor ? 0.1118 : 0.0;\nsum += vec3( texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) )  ) != clearColor ? 0.051 : 0.0;\ngl_FragColor = vec4(shadowColor * sum, 1.0);\n}"};
