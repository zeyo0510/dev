T.GlowShader={uniforms:{tDiffuse:{type:"t",value:null},clearColor:{type:"c",value:new T.Color(0,0,0)},vOffset:{type:"f",value:1/512},hOffset:{type:"f",value:1/512},intensity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec3 clearColor;\nuniform float vOffset;\nuniform float hOffset;\nuniform float intensity;\nvarying vec2 vUv;\nconst float intensity0 = 0.0;\nconst float intensity1 = 0.0255;\nconst float intensity2 = 0.0459;\nconst float intensity3 = 0.0612;\nconst float intensity4 = 0.0765;\nconst float intensity5 = 0.0816;\nvoid main() {\nfloat sum = intensity0;\nvec3 currentPointColor = vec3(texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) );\nif (currentPointColor != clearColor) discard;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x - 1.0 * hOffset, vUv.y - 1.0 * vOffset ) ) ) != clearColor ? intensity4 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x + 1.0 * hOffset, vUv.y + 1.0 * vOffset ) ) ) != clearColor ? intensity4 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x - 1.0 * hOffset, vUv.y + 1.0 * vOffset ) ) ) != clearColor ? intensity4 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x + 1.0 * hOffset, vUv.y - 1.0 * vOffset ) ) ) != clearColor ? intensity4 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vOffset ) ) ) != clearColor ? intensity3 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vOffset ) ) ) != clearColor ? intensity3 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x - 2.0 * hOffset, vUv.y ) ) ) != clearColor ? intensity3 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x + 2.0 * hOffset, vUv.y ) ) ) != clearColor ? intensity3 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x - 1.0 * hOffset, vUv.y - 3.0 * vOffset ) ) ) != clearColor ? intensity2 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x + 1.0 * hOffset, vUv.y + 3.0 * vOffset ) ) ) != clearColor ? intensity2 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x - 1.0 * hOffset, vUv.y + 3.0 * vOffset ) ) ) != clearColor ? intensity2 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x + 1.0 * hOffset, vUv.y - 3.0 * vOffset ) ) ) != clearColor ? intensity2: intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x - 3.0 * hOffset, vUv.y - 1.0 * vOffset ) ) ) != clearColor ? intensity2 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x + 3.0 * hOffset, vUv.y + 1.0 * vOffset ) ) ) != clearColor ? intensity2 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x - 3.0 * hOffset, vUv.y + 1.0 * vOffset ) ) ) != clearColor ? intensity2 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x + 3.0 * hOffset, vUv.y - 1.0 * vOffset ) ) ) != clearColor ? intensity2 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x - 2.0 * hOffset, vUv.y - 3.0 * vOffset ) ) ) != clearColor ? intensity1 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x + 2.0 * hOffset, vUv.y + 3.0 * vOffset ) ) ) != clearColor ? intensity1 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x - 2.0 * hOffset, vUv.y + 3.0 * vOffset ) ) ) != clearColor ? intensity1 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x + 2.0 * hOffset, vUv.y - 3.0 * vOffset ) ) ) != clearColor ? intensity1 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x - 3.0 * hOffset, vUv.y - 2.0 * vOffset ) ) ) != clearColor ? intensity1 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x + 3.0 * hOffset, vUv.y + 2.0 * vOffset ) ) ) != clearColor ? intensity1 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x - 3.0 * hOffset, vUv.y + 2.0 * vOffset ) ) ) != clearColor ? intensity1 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x + 3.0 * hOffset, vUv.y - 2.0 * vOffset ) ) ) != clearColor ? intensity1 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vOffset ) ) ) != clearColor ? intensity1 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vOffset ) ) ) != clearColor ? intensity1 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x - 4.0 * hOffset, vUv.y ) ) ) != clearColor ? intensity1 : intensity0;\nsum += vec3(texture2D( tDiffuse, vec2( vUv.x + 4.0 * hOffset, vUv.y ) ) ) != clearColor ? intensity1 : intensity0;\nif (sum == 0.0) discard;\ngl_FragColor = vec4( vec3(sum + intensity5), 1.0) * intensity;\n}"};
