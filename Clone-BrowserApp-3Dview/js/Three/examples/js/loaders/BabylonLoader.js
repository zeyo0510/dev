T.BabylonLoader=function(e){this.manager=void 0!==e?e:T.DefaultLoadingManager};
T.BabylonLoader.prototype={constructor:T.ObjectLoader,load:function(e,h,g,m){var d=this,c=new T.XHRLoader(d.manager);c.setCrossOrigin(this.crossOrigin);return c.load(e,function(c){h(d.parse(JSON.parse(c)))},g,m)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var h=this.parseMaterials(e.materials);return this.parseObjects(e,h)},parseMaterials:function(e){for(var h={},g=0,m=e.length;g<m;g++){var d=e[g],c=new T.ObjectMaterial;c.name=d.name;c.ambient.fromArray(d.ambient);c.color.fromArray(d.diffuse);
c.emissive.fromArray(d.emissive);c.specular.fromArray(d.specular);c.shininess=d.specularPower;c.opacity=d.alpha;h[d.id]=c}return h},parseObjects:function(e,h){for(var g={},m=new T.Scene,d=e.lights,c=0,p=d.length;c<p;c++){var a=d[c],b;switch(a.type){case 0:b=new T.PointLight;break;case 1:b=new T.DirectionalLight;break;case 2:b=new BABYLON.SpotLight;break;case 3:b=new BABYLON.HemisphericLight}b.name=a.name;b.position.set((a.data?a.data:a.position)[0],(a.data?a.data:a.position)[1],-(a.data?a.data:a.position)[2]);
b.color.fromArray(a.diffuse);a.intensity&&(b.intensity=a.intensity);g[a.id]=b;m.add(b)}d=e.meshes;c=0;for(p=d.length;c<p;c++){a=d[c];if(null!==a.indices){b=new T.BufferGeometry;b.attributes.index={itemSize:1,array:new Uint16Array(a.indices)};var k=0,n=[],q=[];switch(a.uvCount){case 0:k=6;break;case 1:k=8;break;case 2:k=10}var l=a.vertices;if(l)for(var f=0,r=l.length;f<r;f+=k)n.push(l[f],l[f+1],-l[f+2]),q.push(l[f+3],l[f+4],-l[f+5]);else n=a.positions,q=a.normals;b.attributes.position={itemSize:3,
array:new Float32Array(n)};b.attributes.normal={itemSize:3,array:new Float32Array(q)};k=a.subMeshes;if(null!==k)for(f=0,r=k.length;f<r;f++)n=k[f],b.offsets.push({start:n.indexStart,index:0,count:n.indexCount});else b.offsets.push({start:0,index:0,count:a.indices.length});b=new T.Mesh(b,h[a.materialId])}else b=new T.Object3D;b.name=a.name;b.position.set(a.position[0],a.position[1],-a.position[2]);b.rotation.fromArray(a.rotation);b.scale.fromArray(a.scaling);void 0!==a.parentId&&""!==a.parentId?g[a.parentId].add(b):
m.add(b);g[a.id]=b}return m}};
