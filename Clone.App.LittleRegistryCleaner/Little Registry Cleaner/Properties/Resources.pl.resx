<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="crashReporterFail" xml:space="preserve">
    <value>Raport o błędzie Nie można wysłać</value>
  </data>
  <data name="crashReporterSuccess" xml:space="preserve">
    <value>Raport o błędach wysłane</value>
  </data>
  <data name="mainAddExcludeEntry" xml:space="preserve">
    <value>Dodano wybranych kluczy rejestru w celu wyłączenia lista</value>
  </data>
  <data name="mainAskExit" xml:space="preserve">
    <value>Czy na pewno chcesz zakończyć?</value>
  </data>
  <data name="mainFreeWareProgram" xml:space="preserve">
    <value>Ten program jest freeware. Jeśli zostanie wypłacona dla kopii tego programu, skorzystaj z refundacji wywozowej!</value>
  </data>
  <data name="mainInvalidHelpFile" xml:space="preserve">
    <value>Nie można znaleźć Little Registry Cleaner.chm</value>
  </data>
  <data name="mainProblemsFix" xml:space="preserve">
    <value>Chcesz naprawić wszystkie wybrane problemy?</value>
  </data>
  <data name="mainProblemsRemoved" xml:space="preserve">
    <value>Usunięto problemy z rejestru</value>
  </data>
  <data name="mainScanningAborted" xml:space="preserve">
    <value>Aborted skanowania rejestru</value>
  </data>
  <data name="mainScanningFinished" xml:space="preserve">
    <value>Zakończono skanowanie rejestru</value>
  </data>
  <data name="mainSelectSections" xml:space="preserve">
    <value>Wybierz punkt skanowania</value>
  </data>
  <data name="mainUpdateAsk" xml:space="preserve">
    <value>Jest dostępna nowsza wersja. Chcesz, aby go pobrać?</value>
  </data>
  <data name="optionsExcludeDir" xml:space="preserve">
    <value>Wybierz folder, do wyłączenia z rejestru skanowania</value>
  </data>
  <data name="optionsExcludeEmptyRegPath" xml:space="preserve">
    <value>Ścieżka rejestru nie może być pusta</value>
  </data>
  <data name="optionsExcludeFile" xml:space="preserve">
    <value>Wybierz plik do wyłączenia z rejestru skanowania</value>
  </data>
  <data name="optionsExcludeInvalidRegPath" xml:space="preserve">
    <value>Określony klucz rejestru nie istnieje</value>
  </data>
  <data name="optionsExcludeRemove" xml:space="preserve">
    <value>Czy na pewno?</value>
  </data>
  <data name="optionsSchedDescD" xml:space="preserve">
    <value>Skanowania rejestru będzie uruchamiany codziennie o {0}</value>
  </data>
  <data name="optionsSchedDescM" xml:space="preserve">
    <value>Skanowania rejestru będą uruchamiane co miesiąc na {0} dzień {1}</value>
  </data>
  <data name="optionsSchedDescW" xml:space="preserve">
    <value>Skanowania rejestru będą uruchamiane co tydzień w {0} w {1}</value>
  </data>
  <data name="optionsSelectBackupDir" xml:space="preserve">
    <value>Wybierz folder, do którego kopii zapasowej zostanie umieszczony</value>
  </data>
  <data name="optionsSelectLogDir" xml:space="preserve">
    <value>Wybierz folder, w którym pliki dziennika zostaną umieszczone</value>
  </data>
  <data name="programAlreadyRunning" xml:space="preserve">
    <value>Inny program wydaje się być uruchomiony już...</value>
  </data>
  <data name="programNeedAdmin" xml:space="preserve">
    <value>Musisz być administratorem, żeby uruchomić ten program</value>
  </data>
  <data name="programNoCT" xml:space="preserve">
    <value>Nie można odnaleźć "Common Tools.dll"</value>
  </data>
  <data name="restoreAsk" xml:space="preserve">
    <value>Czy na pewno?</value>
  </data>
  <data name="restoreError" xml:space="preserve">
    <value>Błąd przywracania rejestru</value>
  </data>
  <data name="restoreFileNotFound" xml:space="preserve">
    <value>Przywrócić wybrany plik nie został znaleziony</value>
  </data>
  <data name="restoreRestored" xml:space="preserve">
    <value>Pomyślnie przywrócić rejestr</value>
  </data>
  <data name="scanDlgExit" xml:space="preserve">
    <value>Czy na pewno?</value>
  </data>
  <data name="scanDlgProgressBarScanning" xml:space="preserve">
    <value>Skanowanie: </value>
  </data>
  <data name="updateLatest" xml:space="preserve">
    <value>Masz najnowszą wersję</value>
  </data>
  <data name="updateNewer" xml:space="preserve">
    <value>Wersja dostępna Nowsze</value>
  </data>
</root>
